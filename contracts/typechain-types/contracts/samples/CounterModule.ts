/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface CounterModuleInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "getNumber"
      | "isModuleType"
      | "onInstall"
      | "onUninstall"
      | "setNumber"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "ModuleInstalledReceived"
      | "ModuleUninstalledReceived"
  ): EventFragment;

  encodeFunctionData(functionFragment: "getNumber", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "isModuleType",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onInstall",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "onUninstall",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setNumber",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "getNumber", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isModuleType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "onInstall", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "onUninstall",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setNumber", data: BytesLike): Result;
}

export namespace ModuleInstalledReceivedEvent {
  export type InputTuple = [account: AddressLike, data: BytesLike];
  export type OutputTuple = [account: string, data: string];
  export interface OutputObject {
    account: string;
    data: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ModuleUninstalledReceivedEvent {
  export type InputTuple = [account: AddressLike, data: BytesLike];
  export type OutputTuple = [account: string, data: string];
  export interface OutputObject {
    account: string;
    data: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface CounterModule extends BaseContract {
  connect(runner?: ContractRunner | null): CounterModule;
  waitForDeployment(): Promise<this>;

  interface: CounterModuleInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  getNumber: TypedContractMethod<[], [bigint], "view">;

  isModuleType: TypedContractMethod<
    [moduleTypeId: BigNumberish],
    [boolean],
    "view"
  >;

  onInstall: TypedContractMethod<[data: BytesLike], [void], "nonpayable">;

  onUninstall: TypedContractMethod<[data: BytesLike], [void], "nonpayable">;

  setNumber: TypedContractMethod<[number: BigNumberish], [void], "nonpayable">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "getNumber"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "isModuleType"
  ): TypedContractMethod<[moduleTypeId: BigNumberish], [boolean], "view">;
  getFunction(
    nameOrSignature: "onInstall"
  ): TypedContractMethod<[data: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "onUninstall"
  ): TypedContractMethod<[data: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setNumber"
  ): TypedContractMethod<[number: BigNumberish], [void], "nonpayable">;

  getEvent(
    key: "ModuleInstalledReceived"
  ): TypedContractEvent<
    ModuleInstalledReceivedEvent.InputTuple,
    ModuleInstalledReceivedEvent.OutputTuple,
    ModuleInstalledReceivedEvent.OutputObject
  >;
  getEvent(
    key: "ModuleUninstalledReceived"
  ): TypedContractEvent<
    ModuleUninstalledReceivedEvent.InputTuple,
    ModuleUninstalledReceivedEvent.OutputTuple,
    ModuleUninstalledReceivedEvent.OutputObject
  >;

  filters: {
    "ModuleInstalledReceived(address,bytes)": TypedContractEvent<
      ModuleInstalledReceivedEvent.InputTuple,
      ModuleInstalledReceivedEvent.OutputTuple,
      ModuleInstalledReceivedEvent.OutputObject
    >;
    ModuleInstalledReceived: TypedContractEvent<
      ModuleInstalledReceivedEvent.InputTuple,
      ModuleInstalledReceivedEvent.OutputTuple,
      ModuleInstalledReceivedEvent.OutputObject
    >;

    "ModuleUninstalledReceived(address,bytes)": TypedContractEvent<
      ModuleUninstalledReceivedEvent.InputTuple,
      ModuleUninstalledReceivedEvent.OutputTuple,
      ModuleUninstalledReceivedEvent.OutputObject
    >;
    ModuleUninstalledReceived: TypedContractEvent<
      ModuleUninstalledReceivedEvent.InputTuple,
      ModuleUninstalledReceivedEvent.OutputTuple,
      ModuleUninstalledReceivedEvent.OutputObject
    >;
  };
}
