/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IERC7579AccountConfig,
  IERC7579AccountConfigInterface,
} from "../../../../../@openzeppelin/contracts/interfaces/draft-IERC7579.sol/IERC7579AccountConfig";

const _abi = [
  {
    inputs: [],
    name: "accountId",
    outputs: [
      {
        internalType: "string",
        name: "accountImplementationId",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "encodedMode",
        type: "bytes32",
      },
    ],
    name: "supportsExecutionMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "moduleTypeId",
        type: "uint256",
      },
    ],
    name: "supportsModule",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IERC7579AccountConfig__factory {
  static readonly abi = _abi;
  static createInterface(): IERC7579AccountConfigInterface {
    return new Interface(_abi) as IERC7579AccountConfigInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IERC7579AccountConfig {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IERC7579AccountConfig;
  }
}
