/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC7579HookMock,
  ERC7579HookMockInterface,
} from "../../../../contracts/modules/LimitsModule.sol/ERC7579HookMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ModuleInstalledReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ModuleUninstalledReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    name: "PostCheck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "PreCheck",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "moduleTypeId",
        type: "uint256",
      },
    ],
    name: "isModuleType",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onInstall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onUninstall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    name: "postCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "msgData",
        type: "bytes",
      },
    ],
    name: "preCheck",
    outputs: [
      {
        internalType: "bytes",
        name: "hookData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061043b8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063173bf7da1461005c5780636d61fe70146100715780638a91b0e314610084578063d68f602514610097578063ecd05961146100c0575b600080fd5b61006f61006a36600461024f565b6100e4565b005b61006f61007f36600461024f565b610121565b61006f61009236600461024f565b610154565b6100aa6100a5366004610291565b610187565b6040516100b791906102f9565b60405180910390f35b6100d46100ce366004610347565b60041490565b60405190151581526020016100b7565b7f166cbfbea1f3655ccfda7e2ddcae9d786a1dbf9d5a67e5cc9d70a736faad58a68282604051610115929190610389565b60405180910390a15050565b7f1bb2cf2ce981360109c48db05416ea380edeec6b23f5266b1cc3be41e24a3e94338383604051610115939291906103a5565b7fc8913c4ab45f9cf985973c570fc361bb110b13a7312ed2210427746284f65f4c338383604051610115939291906103a5565b60607fc4de0094f7f49eaf3bb9d1712c278fa065183ac34ae24a4c2d722b16a2776bff858585856040516101be94939291906103d3565b60405180910390a182828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509298975050505050505050565b60008083601f84011261021857600080fd5b50813567ffffffffffffffff81111561023057600080fd5b60208301915083602082850101111561024857600080fd5b9250929050565b6000806020838503121561026257600080fd5b823567ffffffffffffffff81111561027957600080fd5b61028585828601610206565b90969095509350505050565b600080600080606085870312156102a757600080fd5b84356001600160a01b03811681146102be57600080fd5b935060208501359250604085013567ffffffffffffffff8111156102e157600080fd5b6102ed87828801610206565b95989497509550505050565b602081526000825180602084015260005b81811015610327576020818601810151604086840101520161030a565b506000604082850101526040601f19601f83011684010191505092915050565b60006020828403121561035957600080fd5b5035919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208152600061039d602083018486610360565b949350505050565b6001600160a01b03841681526040602082018190526000906103ca9083018486610360565b95945050505050565b60018060a01b03851681528360208201526060604082015260006103fb606083018486610360565b969550505050505056fea2646970667358221220c9236412ec2f0173c6363ec59dd2a55d999628c5d4e4a6ebe14b3102064a130a64736f6c634300081c0033";

type ERC7579HookMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC7579HookMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC7579HookMock__factory extends ContractFactory {
  constructor(...args: ERC7579HookMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC7579HookMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC7579HookMock__factory {
    return super.connect(runner) as ERC7579HookMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC7579HookMockInterface {
    return new Interface(_abi) as ERC7579HookMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC7579HookMock {
    return new Contract(address, _abi, runner) as unknown as ERC7579HookMock;
  }
}
