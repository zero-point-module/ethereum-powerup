{"id":"a4ff438e2ba6f18ff126f9771eb529c9","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC4337.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (interfaces/draft-IERC4337.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev A https://github.com/ethereum/ercs/blob/master/ERCS/erc-4337.md#useroperation[user operation] is composed of the following elements:\n * - `sender` (`address`): The account making the operation\n * - `nonce` (`uint256`): Anti-replay parameter (see “Semi-abstracted Nonce Support” )\n * - `factory` (`address`): account factory, only for new accounts\n * - `factoryData` (`bytes`): data for account factory (only if account factory exists)\n * - `callData` (`bytes`): The data to pass to the sender during the main execution call\n * - `callGasLimit` (`uint256`): The amount of gas to allocate the main execution call\n * - `verificationGasLimit` (`uint256`): The amount of gas to allocate for the verification step\n * - `preVerificationGas` (`uint256`): Extra gas to pay the bundler\n * - `maxFeePerGas` (`uint256`): Maximum fee per gas (similar to EIP-1559 max_fee_per_gas)\n * - `maxPriorityFeePerGas` (`uint256`): Maximum priority fee per gas (similar to EIP-1559 max_priority_fee_per_gas)\n * - `paymaster` (`address`): Address of paymaster contract, (or empty, if account pays for itself)\n * - `paymasterVerificationGasLimit` (`uint256`): The amount of gas to allocate for the paymaster validation code\n * - `paymasterPostOpGasLimit` (`uint256`): The amount of gas to allocate for the paymaster post-operation code\n * - `paymasterData` (`bytes`): Data for paymaster (only if paymaster exists)\n * - `signature` (`bytes`): Data passed into the account to verify authorization\n *\n * When passed to on-chain contacts, the following packed version is used.\n * - `sender` (`address`)\n * - `nonce` (`uint256`)\n * - `initCode` (`bytes`): concatenation of factory address and factoryData (or empty)\n * - `callData` (`bytes`)\n * - `accountGasLimits` (`bytes32`): concatenation of verificationGas (16 bytes) and callGas (16 bytes)\n * - `preVerificationGas` (`uint256`)\n * - `gasFees` (`bytes32`): concatenation of maxPriorityFeePerGas (16 bytes) and maxFeePerGas (16 bytes)\n * - `paymasterAndData` (`bytes`): concatenation of paymaster fields (or empty)\n * - `signature` (`bytes`)\n */\nstruct PackedUserOperation {\n    address sender;\n    uint256 nonce;\n    bytes initCode; // `abi.encodePacked(factory, factoryData)`\n    bytes callData;\n    bytes32 accountGasLimits; // `abi.encodePacked(verificationGasLimit, callGasLimit)` 16 bytes each\n    uint256 preVerificationGas;\n    bytes32 gasFees; // `abi.encodePacked(maxPriorityFeePerGas, maxFeePerGas)` 16 bytes each\n    bytes paymasterAndData; // `abi.encodePacked(paymaster, paymasterVerificationGasLimit, paymasterPostOpGasLimit, paymasterData)` (20 bytes, 16 bytes, 16 bytes, dynamic)\n    bytes signature;\n}\n\n/**\n * @dev Aggregates and validates multiple signatures for a batch of user operations.\n *\n * A contract could implement this interface with custom validation schemes that allow signature aggregation,\n * enabling significant optimizations and gas savings for execution and transaction data cost.\n *\n * Bundlers and clients whitelist supported aggregators.\n *\n * See https://eips.ethereum.org/EIPS/eip-7766[ERC-7766]\n */\ninterface IAggregator {\n    /**\n     * @dev Validates the signature for a user operation.\n     * Returns an alternative signature that should be used during bundling.\n     */\n    function validateUserOpSignature(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes memory sigForUserOp);\n\n    /**\n     * @dev Returns an aggregated signature for a batch of user operation's signatures.\n     */\n    function aggregateSignatures(\n        PackedUserOperation[] calldata userOps\n    ) external view returns (bytes memory aggregatesSignature);\n\n    /**\n     * @dev Validates that the aggregated signature is valid for the user operations.\n     *\n     * Requirements:\n     *\n     * - The aggregated signature MUST match the given list of operations.\n     */\n    function validateSignatures(PackedUserOperation[] calldata userOps, bytes calldata signature) external view;\n}\n\n/**\n * @dev Handle nonce management for accounts.\n *\n * Nonces are used in accounts as a replay protection mechanism and to ensure the order of user operations.\n * To avoid limiting the number of operations an account can perform, the interface allows using parallel\n * nonces by using a `key` parameter.\n *\n * See https://eips.ethereum.org/EIPS/eip-4337#semi-abstracted-nonce-support[ERC-4337 semi-abstracted nonce support].\n */\ninterface IEntryPointNonces {\n    /**\n     * @dev Returns the nonce for a `sender` account and a `key`.\n     *\n     * Nonces for a certain `key` are always increasing.\n     */\n    function getNonce(address sender, uint192 key) external view returns (uint256 nonce);\n}\n\n/**\n * @dev Handle stake management for entities (i.e. accounts, paymasters, factories).\n *\n * The EntryPoint must implement the following API to let entities like paymasters have a stake,\n * and thus have more flexibility in their storage access\n * (see https://eips.ethereum.org/EIPS/eip-4337#reputation-scoring-and-throttlingbanning-for-global-entities[reputation, throttling and banning.])\n */\ninterface IEntryPointStake {\n    /**\n     * @dev Returns the balance of the account.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Deposits `msg.value` to the account.\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * @dev Withdraws `withdrawAmount` from the account to `withdrawAddress`.\n     */\n    function withdrawTo(address payable withdrawAddress, uint256 withdrawAmount) external;\n\n    /**\n     * @dev Adds stake to the account with an unstake delay of `unstakeDelaySec`.\n     */\n    function addStake(uint32 unstakeDelaySec) external payable;\n\n    /**\n     * @dev Unlocks the stake of the account.\n     */\n    function unlockStake() external;\n\n    /**\n     * @dev Withdraws the stake of the account to `withdrawAddress`.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n}\n\n/**\n * @dev Entry point for user operations.\n *\n * User operations are validated and executed by this contract.\n */\ninterface IEntryPoint is IEntryPointNonces, IEntryPointStake {\n    /**\n     * @dev A user operation at `opIndex` failed with `reason`.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * @dev A user operation at `opIndex` failed with `reason` and `inner` returned data.\n     */\n    error FailedOpWithRevert(uint256 opIndex, string reason, bytes inner);\n\n    /**\n     * @dev Batch of aggregated user operations per aggregator.\n     */\n    struct UserOpsPerAggregator {\n        PackedUserOperation[] userOps;\n        IAggregator aggregator;\n        bytes signature;\n    }\n\n    /**\n     * @dev Executes a batch of user operations.\n     * @param beneficiary Address to which gas is refunded up completing the execution.\n     */\n    function handleOps(PackedUserOperation[] calldata ops, address payable beneficiary) external;\n\n    /**\n     * @dev Executes a batch of aggregated user operations per aggregator.\n     * @param beneficiary Address to which gas is refunded up completing the execution.\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n}\n\n/**\n * @dev Base interface for an ERC-4337 account.\n */\ninterface IAccount {\n    /**\n     * @dev Validates a user operation.\n     *\n     * * MUST validate the caller is a trusted EntryPoint\n     * * MUST validate that the signature is a valid signature of the userOpHash, and SHOULD\n     *   return SIG_VALIDATION_FAILED (and not revert) on signature mismatch. Any other error MUST revert.\n     * * MUST pay the entryPoint (caller) at least the “missingAccountFunds” (which might\n     *   be zero, in case the current account’s deposit is high enough)\n     *\n     * Returns an encoded packed validation data that is composed of the following elements:\n     *\n     * - `authorizer` (`address`): 0 for success, 1 for failure, otherwise the address of an authorizer contract\n     * - `validUntil` (`uint48`): The UserOp is valid only up to this time. Zero for “infinite”.\n     * - `validAfter` (`uint48`): The UserOp is valid only after this time.\n     */\n    function validateUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 missingAccountFunds\n    ) external returns (uint256 validationData);\n}\n\n/**\n * @dev Support for executing user operations by prepending the {executeUserOp} function selector\n * to the UserOperation's `callData`.\n */\ninterface IAccountExecute {\n    /**\n     * @dev Executes a user operation.\n     */\n    function executeUserOp(PackedUserOperation calldata userOp, bytes32 userOpHash) external;\n}\n\n/**\n * @dev Interface for a paymaster contract that agrees to pay for the gas costs of a user operation.\n *\n * NOTE: A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\n */\ninterface IPaymaster {\n    enum PostOpMode {\n        opSucceeded,\n        opReverted,\n        postOpReverted\n    }\n\n    /**\n     * @dev Validates whether the paymaster is willing to pay for the user operation. See\n     * {IAccount-validateUserOp} for additional information on the return value.\n     *\n     * NOTE: Bundlers will reject this method if it modifies the state, unless it's whitelisted.\n     */\n    function validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) external returns (bytes memory context, uint256 validationData);\n\n    /**\n     * @dev Verifies the sender is the entrypoint.\n     * @param actualGasCost the actual amount paid (by account or paymaster) for this UserOperation\n     * @param actualUserOpFeePerGas total gas used by this UserOperation (including preVerification, creation, validation and execution)\n     */\n    function postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost,\n        uint256 actualUserOpFeePerGas\n    ) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC7579.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (interfaces/draft-IERC7579.sol)\npragma solidity ^0.8.20;\n\nimport {PackedUserOperation} from \"./draft-IERC4337.sol\";\n\nuint256 constant VALIDATION_SUCCESS = 0;\nuint256 constant VALIDATION_FAILED = 1;\nuint256 constant MODULE_TYPE_VALIDATOR = 1;\nuint256 constant MODULE_TYPE_EXECUTOR = 2;\nuint256 constant MODULE_TYPE_FALLBACK = 3;\nuint256 constant MODULE_TYPE_HOOK = 4;\n\n/// @dev Minimal configuration interface for ERC-7579 modules\ninterface IERC7579Module {\n    /**\n     * @dev This function is called by the smart account during installation of the module\n     * @param data arbitrary data that may be required on the module during `onInstall` initialization\n     *\n     * MUST revert on error (e.g. if module is already enabled)\n     */\n    function onInstall(bytes calldata data) external;\n\n    /**\n     * @dev This function is called by the smart account during uninstallation of the module\n     * @param data arbitrary data that may be required on the module during `onUninstall` de-initialization\n     *\n     * MUST revert on error\n     */\n    function onUninstall(bytes calldata data) external;\n\n    /**\n     * @dev Returns boolean value if module is a certain type\n     * @param moduleTypeId the module type ID according the ERC-7579 spec\n     *\n     * MUST return true if the module is of the given type and false otherwise\n     */\n    function isModuleType(uint256 moduleTypeId) external view returns (bool);\n}\n\n/**\n * @dev ERC-7579 Validation module (type 1).\n *\n * A module that implements logic to validate user operations and signatures.\n */\ninterface IERC7579Validator is IERC7579Module {\n    /**\n     * @dev Validates a UserOperation\n     * @param userOp the ERC-4337 PackedUserOperation\n     * @param userOpHash the hash of the ERC-4337 PackedUserOperation\n     *\n     * MUST validate that the signature is a valid signature of the userOpHash\n     * SHOULD return ERC-4337's SIG_VALIDATION_FAILED (and not revert) on signature mismatch\n     * See {IAccount-validateUserOp} for additional information on the return value\n     */\n    function validateUserOp(PackedUserOperation calldata userOp, bytes32 userOpHash) external returns (uint256);\n\n    /**\n     * @dev Validates a signature using ERC-1271\n     * @param sender the address that sent the ERC-1271 request to the smart account\n     * @param hash the hash of the ERC-1271 request\n     * @param signature the signature of the ERC-1271 request\n     *\n     * MUST return the ERC-1271 `MAGIC_VALUE` if the signature is valid\n     * MUST NOT modify state\n     */\n    function isValidSignatureWithSender(\n        address sender,\n        bytes32 hash,\n        bytes calldata signature\n    ) external view returns (bytes4);\n}\n\n/**\n * @dev ERC-7579 Hooks module (type 4).\n *\n * A module that implements logic to execute before and after the account executes a user operation,\n * either individually or batched.\n */\ninterface IERC7579Hook is IERC7579Module {\n    /**\n     * @dev Called by the smart account before execution\n     * @param msgSender the address that called the smart account\n     * @param value the value that was sent to the smart account\n     * @param msgData the data that was sent to the smart account\n     *\n     * MAY return arbitrary data in the `hookData` return value\n     */\n    function preCheck(\n        address msgSender,\n        uint256 value,\n        bytes calldata msgData\n    ) external returns (bytes memory hookData);\n\n    /**\n     * @dev Called by the smart account after execution\n     * @param hookData the data that was returned by the `preCheck` function\n     *\n     * MAY validate the `hookData` to validate transaction context of the `preCheck` function\n     */\n    function postCheck(bytes calldata hookData) external;\n}\n\nstruct Execution {\n    address target;\n    uint256 value;\n    bytes callData;\n}\n\n/**\n * @dev ERC-7579 Execution.\n *\n * Accounts should implement this interface so that the Entrypoint and ERC-7579 modules can execute operations.\n */\ninterface IERC7579Execution {\n    /**\n     * @dev Executes a transaction on behalf of the account.\n     * @param mode The encoded execution mode of the transaction. See ModeLib.sol for details\n     * @param executionCalldata The encoded execution call data\n     *\n     * MUST ensure adequate authorization control: e.g. onlyEntryPointOrSelf if used with ERC-4337\n     * If a mode is requested that is not supported by the Account, it MUST revert\n     */\n    function execute(bytes32 mode, bytes calldata executionCalldata) external payable;\n\n    /**\n     * @dev Executes a transaction on behalf of the account.\n     *         This function is intended to be called by Executor Modules\n     * @param mode The encoded execution mode of the transaction. See ModeLib.sol for details\n     * @param executionCalldata The encoded execution call data\n     * @return returnData An array with the returned data of each executed subcall\n     *\n     * MUST ensure adequate authorization control: i.e. onlyExecutorModule\n     * If a mode is requested that is not supported by the Account, it MUST revert\n     */\n    function executeFromExecutor(\n        bytes32 mode,\n        bytes calldata executionCalldata\n    ) external payable returns (bytes[] memory returnData);\n}\n\n/**\n * @dev ERC-7579 Account Config.\n *\n * Accounts should implement this interface to expose information that identifies the account, supported modules and capabilities.\n */\ninterface IERC7579AccountConfig {\n    /**\n     * @dev Returns the account id of the smart account\n     * @return accountImplementationId the account id of the smart account\n     *\n     * MUST return a non-empty string\n     * The accountId SHOULD be structured like so:\n     *        \"vendorname.accountname.semver\"\n     * The id SHOULD be unique across all smart accounts\n     */\n    function accountId() external view returns (string memory accountImplementationId);\n\n    /**\n     * @dev Function to check if the account supports a certain execution mode (see above)\n     * @param encodedMode the encoded mode\n     *\n     * MUST return true if the account supports the mode and false otherwise\n     */\n    function supportsExecutionMode(bytes32 encodedMode) external view returns (bool);\n\n    /**\n     * @dev Function to check if the account supports a certain module typeId\n     * @param moduleTypeId the module type ID according to the ERC-7579 spec\n     *\n     * MUST return true if the account supports the module type and false otherwise\n     */\n    function supportsModule(uint256 moduleTypeId) external view returns (bool);\n}\n\n/**\n * @dev ERC-7579 Module Config.\n *\n * Accounts should implement this interface to allow installing and uninstalling modules.\n */\ninterface IERC7579ModuleConfig {\n    event ModuleInstalled(uint256 moduleTypeId, address module);\n    event ModuleUninstalled(uint256 moduleTypeId, address module);\n\n    /**\n     * @dev Installs a Module of a certain type on the smart account\n     * @param moduleTypeId the module type ID according to the ERC-7579 spec\n     * @param module the module address\n     * @param initData arbitrary data that may be required on the module during `onInstall`\n     * initialization.\n     *\n     * MUST implement authorization control\n     * MUST call `onInstall` on the module with the `initData` parameter if provided\n     * MUST emit ModuleInstalled event\n     * MUST revert if the module is already installed or the initialization on the module failed\n     */\n    function installModule(uint256 moduleTypeId, address module, bytes calldata initData) external;\n\n    /**\n     * @dev Uninstalls a Module of a certain type on the smart account\n     * @param moduleTypeId the module type ID according the ERC-7579 spec\n     * @param module the module address\n     * @param deInitData arbitrary data that may be required on the module during `onInstall`\n     * initialization.\n     *\n     * MUST implement authorization control\n     * MUST call `onUninstall` on the module with the `deInitData` parameter if provided\n     * MUST emit ModuleUninstalled event\n     * MUST revert if the module is not installed or the deInitialization on the module failed\n     */\n    function uninstallModule(uint256 moduleTypeId, address module, bytes calldata deInitData) external;\n\n    /**\n     * @dev Returns whether a module is installed on the smart account\n     * @param moduleTypeId the module type ID according the ERC-7579 spec\n     * @param module the module address\n     * @param additionalContext arbitrary data that may be required to determine if the module is installed\n     *\n     * MUST return true if the module is installed and false otherwise\n     */\n    function isModuleInstalled(\n        uint256 moduleTypeId,\n        address module,\n        bytes calldata additionalContext\n    ) external view returns (bool);\n}\n"},"contracts/CounterModule.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IERC7579Module, MODULE_TYPE_EXECUTOR} from \"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\";\n\ncontract CounterModule is IERC7579Module {\n    uint256 private constant _moduleTypeId = MODULE_TYPE_EXECUTOR;\n\n    mapping(address account => uint256 number) private _numbers;\n\n    event ModuleInstalledReceived(address account, bytes data);\n    event ModuleUninstalledReceived(address account, bytes data);\n\n    function onInstall(bytes calldata data) public virtual {\n        // extract number from data\n        uint256 number = abi.decode(data, (uint256));\n        setNumber(number);\n\n        emit ModuleInstalledReceived(msg.sender, data);\n    }\n\n    function onUninstall(bytes calldata data) public virtual {\n        emit ModuleUninstalledReceived(msg.sender, data);\n    }\n\n    function isModuleType(uint256 moduleTypeId) external pure returns (bool) {\n        return moduleTypeId == _moduleTypeId;\n    }\n\n    // Counter Module specific functions\n    function setNumber(uint256 number) public {\n        _numbers[msg.sender] = number;\n    }\n\n    function getNumber() public view returns (uint256) {\n        return _numbers[msg.sender];\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/draft-IERC4337.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC4337.sol","exportedSymbols":{"IAccount":[172],"IAccountExecute":[183],"IAggregator":[52],"IEntryPoint":[157],"IEntryPointNonces":[64],"IEntryPointStake":[104],"IPaymaster":[217],"PackedUserOperation":[21]},"id":218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:0"},{"canonicalName":"PackedUserOperation","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"139:2084:0","text":" @dev A https://github.com/ethereum/ercs/blob/master/ERCS/erc-4337.md#useroperation[user operation] is composed of the following elements:\n - `sender` (`address`): The account making the operation\n - `nonce` (`uint256`): Anti-replay parameter (see “Semi-abstracted Nonce Support” )\n - `factory` (`address`): account factory, only for new accounts\n - `factoryData` (`bytes`): data for account factory (only if account factory exists)\n - `callData` (`bytes`): The data to pass to the sender during the main execution call\n - `callGasLimit` (`uint256`): The amount of gas to allocate the main execution call\n - `verificationGasLimit` (`uint256`): The amount of gas to allocate for the verification step\n - `preVerificationGas` (`uint256`): Extra gas to pay the bundler\n - `maxFeePerGas` (`uint256`): Maximum fee per gas (similar to EIP-1559 max_fee_per_gas)\n - `maxPriorityFeePerGas` (`uint256`): Maximum priority fee per gas (similar to EIP-1559 max_priority_fee_per_gas)\n - `paymaster` (`address`): Address of paymaster contract, (or empty, if account pays for itself)\n - `paymasterVerificationGasLimit` (`uint256`): The amount of gas to allocate for the paymaster validation code\n - `paymasterPostOpGasLimit` (`uint256`): The amount of gas to allocate for the paymaster post-operation code\n - `paymasterData` (`bytes`): Data for paymaster (only if paymaster exists)\n - `signature` (`bytes`): Data passed into the account to verify authorization\n When passed to on-chain contacts, the following packed version is used.\n - `sender` (`address`)\n - `nonce` (`uint256`)\n - `initCode` (`bytes`): concatenation of factory address and factoryData (or empty)\n - `callData` (`bytes`)\n - `accountGasLimits` (`bytes32`): concatenation of verificationGas (16 bytes) and callGas (16 bytes)\n - `preVerificationGas` (`uint256`)\n - `gasFees` (`bytes32`): concatenation of maxPriorityFeePerGas (16 bytes) and maxFeePerGas (16 bytes)\n - `paymasterAndData` (`bytes`): concatenation of paymaster fields (or empty)\n - `signature` (`bytes`)"},"id":21,"members":[{"constant":false,"id":4,"mutability":"mutable","name":"sender","nameLocation":"2265:6:0","nodeType":"VariableDeclaration","scope":21,"src":"2257:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"2257:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"nonce","nameLocation":"2285:5:0","nodeType":"VariableDeclaration","scope":21,"src":"2277:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8,"mutability":"mutable","name":"initCode","nameLocation":"2302:8:0","nodeType":"VariableDeclaration","scope":21,"src":"2296:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"callData","nameLocation":"2366:8:0","nodeType":"VariableDeclaration","scope":21,"src":"2360:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9,"name":"bytes","nodeType":"ElementaryTypeName","src":"2360:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12,"mutability":"mutable","name":"accountGasLimits","nameLocation":"2388:16:0","nodeType":"VariableDeclaration","scope":21,"src":"2380:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2380:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2490:18:0","nodeType":"VariableDeclaration","scope":21,"src":"2482:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"gasFees","nameLocation":"2522:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2514:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2514:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"paymasterAndData","nameLocation":"2613:16:0","nodeType":"VariableDeclaration","scope":21,"src":"2607:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":17,"name":"bytes","nodeType":"ElementaryTypeName","src":"2607:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"signature","nameLocation":"2785:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2779:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":19,"name":"bytes","nodeType":"ElementaryTypeName","src":"2779:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PackedUserOperation","nameLocation":"2231:19:0","nodeType":"StructDefinition","scope":218,"src":"2224:573:0","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"2799:420:0","text":" @dev Aggregates and validates multiple signatures for a batch of user operations.\n A contract could implement this interface with custom validation schemes that allow signature aggregation,\n enabling significant optimizations and gas savings for execution and transaction data cost.\n Bundlers and clients whitelist supported aggregators.\n See https://eips.ethereum.org/EIPS/eip-7766[ERC-7766]"},"fullyImplemented":false,"id":52,"linearizedBaseContracts":[52],"name":"IAggregator","nameLocation":"3230:11:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"3248:146:0","text":" @dev Validates the signature for a user operation.\n Returns an alternative signature that should be used during bundling."},"functionSelector":"062a422b","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"3408:23:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"mutability":"mutable","name":"userOp","nameLocation":"3470:6:0","nodeType":"VariableDeclaration","scope":31,"src":"3441:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"PackedUserOperation","nameLocations":["3441:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"3441:19:0"},"referencedDeclaration":21,"src":"3441:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3431:51:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"sigForUserOp","nameLocation":"3519:12:0","nodeType":"VariableDeclaration","scope":31,"src":"3506:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":28,"name":"bytes","nodeType":"ElementaryTypeName","src":"3506:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3505:27:0"},"scope":52,"src":"3399:134:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"3539:99:0","text":" @dev Returns an aggregated signature for a batch of user operation's signatures."},"functionSelector":"ae574a43","id":41,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"3652:19:0","nodeType":"FunctionDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"userOps","nameLocation":"3712:7:0","nodeType":"VariableDeclaration","scope":41,"src":"3681:38:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$21_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":34,"nodeType":"UserDefinedTypeName","pathNode":{"id":33,"name":"PackedUserOperation","nameLocations":["3681:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"3681:19:0"},"referencedDeclaration":21,"src":"3681:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_storage_ptr","typeString":"struct PackedUserOperation"}},"id":35,"nodeType":"ArrayTypeName","src":"3681:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$21_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"}],"src":"3671:54:0"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"aggregatesSignature","nameLocation":"3762:19:0","nodeType":"VariableDeclaration","scope":41,"src":"3749:32:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":38,"name":"bytes","nodeType":"ElementaryTypeName","src":"3749:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3748:34:0"},"scope":52,"src":"3643:140:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"3789:207:0","text":" @dev Validates that the aggregated signature is valid for the user operations.\n Requirements:\n - The aggregated signature MUST match the given list of operations."},"functionSelector":"2dd81133","id":51,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"4010:18:0","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"userOps","nameLocation":"4060:7:0","nodeType":"VariableDeclaration","scope":51,"src":"4029:38:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$21_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":44,"nodeType":"UserDefinedTypeName","pathNode":{"id":43,"name":"PackedUserOperation","nameLocations":["4029:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"4029:19:0"},"referencedDeclaration":21,"src":"4029:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_storage_ptr","typeString":"struct PackedUserOperation"}},"id":45,"nodeType":"ArrayTypeName","src":"4029:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$21_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"signature","nameLocation":"4084:9:0","nodeType":"VariableDeclaration","scope":51,"src":"4069:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":47,"name":"bytes","nodeType":"ElementaryTypeName","src":"4069:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:66:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"4108:0:0"},"scope":52,"src":"4001:108:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":218,"src":"3220:891:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IEntryPointNonces","contractDependencies":[],"contractKind":"interface","documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"4113:429:0","text":" @dev Handle nonce management for accounts.\n Nonces are used in accounts as a replay protection mechanism and to ensure the order of user operations.\n To avoid limiting the number of operations an account can perform, the interface allows using parallel\n nonces by using a `key` parameter.\n See https://eips.ethereum.org/EIPS/eip-4337#semi-abstracted-nonce-support[ERC-4337 semi-abstracted nonce support]."},"fullyImplemented":false,"id":64,"linearizedBaseContracts":[64],"name":"IEntryPointNonces","nameLocation":"4553:17:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":54,"nodeType":"StructuredDocumentation","src":"4577:141:0","text":" @dev Returns the nonce for a `sender` account and a `key`.\n Nonces for a certain `key` are always increasing."},"functionSelector":"35567e1a","id":63,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"4732:8:0","nodeType":"FunctionDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"sender","nameLocation":"4749:6:0","nodeType":"VariableDeclaration","scope":63,"src":"4741:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"4741:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"key","nameLocation":"4765:3:0","nodeType":"VariableDeclaration","scope":63,"src":"4757:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":57,"name":"uint192","nodeType":"ElementaryTypeName","src":"4757:7:0","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4740:29:0"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"nonce","nameLocation":"4801:5:0","nodeType":"VariableDeclaration","scope":63,"src":"4793:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"4793:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4792:15:0"},"scope":64,"src":"4723:85:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":218,"src":"4543:267:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IEntryPointStake","contractDependencies":[],"contractKind":"interface","documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"4812:397:0","text":" @dev Handle stake management for entities (i.e. accounts, paymasters, factories).\n The EntryPoint must implement the following API to let entities like paymasters have a stake,\n and thus have more flexibility in their storage access\n (see https://eips.ethereum.org/EIPS/eip-4337#reputation-scoring-and-throttlingbanning-for-global-entities[reputation, throttling and banning.])"},"fullyImplemented":false,"id":104,"linearizedBaseContracts":[104],"name":"IEntryPointStake","nameLocation":"5220:16:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":66,"nodeType":"StructuredDocumentation","src":"5243:59:0","text":" @dev Returns the balance of the account."},"functionSelector":"70a08231","id":73,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"5316:9:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68,"mutability":"mutable","name":"account","nameLocation":"5334:7:0","nodeType":"VariableDeclaration","scope":73,"src":"5326:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"5326:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5325:17:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":73,"src":"5366:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5365:9:0"},"scope":104,"src":"5307:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":74,"nodeType":"StructuredDocumentation","src":"5381:60:0","text":" @dev Deposits `msg.value` to the account."},"functionSelector":"b760faf9","id":79,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"5455:9:0","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"account","nameLocation":"5473:7:0","nodeType":"VariableDeclaration","scope":79,"src":"5465:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5464:17:0"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[],"src":"5498:0:0"},"scope":104,"src":"5446:53:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"5505:89:0","text":" @dev Withdraws `withdrawAmount` from the account to `withdrawAddress`."},"functionSelector":"205c2878","id":87,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"5608:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"withdrawAddress","nameLocation":"5635:15:0","nodeType":"VariableDeclaration","scope":87,"src":"5619:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"5619:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"withdrawAmount","nameLocation":"5660:14:0","nodeType":"VariableDeclaration","scope":87,"src":"5652:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"5652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5618:57:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"5684:0:0"},"scope":104,"src":"5599:86:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":88,"nodeType":"StructuredDocumentation","src":"5691:93:0","text":" @dev Adds stake to the account with an unstake delay of `unstakeDelaySec`."},"functionSelector":"0396cb60","id":93,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"5798:8:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"5814:15:0","nodeType":"VariableDeclaration","scope":93,"src":"5807:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":89,"name":"uint32","nodeType":"ElementaryTypeName","src":"5807:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5806:24:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[],"src":"5847:0:0"},"scope":104,"src":"5789:59:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"5854:57:0","text":" @dev Unlocks the stake of the account."},"functionSelector":"bb9fe6bf","id":97,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"5925:11:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[],"src":"5936:2:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"5947:0:0"},"scope":104,"src":"5916:32:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":98,"nodeType":"StructuredDocumentation","src":"5954:80:0","text":" @dev Withdraws the stake of the account to `withdrawAddress`."},"functionSelector":"c23a5cea","id":103,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"6048:13:0","nodeType":"FunctionDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"withdrawAddress","nameLocation":"6078:15:0","nodeType":"VariableDeclaration","scope":103,"src":"6062:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"6062:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6061:33:0"},"returnParameters":{"id":102,"nodeType":"ParameterList","parameters":[],"src":"6103:0:0"},"scope":104,"src":"6039:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":218,"src":"5210:896:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":106,"name":"IEntryPointNonces","nameLocations":["6249:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":64,"src":"6249:17:0"},"id":107,"nodeType":"InheritanceSpecifier","src":"6249:17:0"},{"baseName":{"id":108,"name":"IEntryPointStake","nameLocations":["6268:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":104,"src":"6268:16:0"},"id":109,"nodeType":"InheritanceSpecifier","src":"6268:16:0"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"6108:115:0","text":" @dev Entry point for user operations.\n User operations are validated and executed by this contract."},"fullyImplemented":false,"id":157,"linearizedBaseContracts":[157,104,64],"name":"IEntryPoint","nameLocation":"6234:11:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"6291:75:0","text":" @dev A user operation at `opIndex` failed with `reason`."},"errorSelector":"220266b6","id":116,"name":"FailedOp","nameLocation":"6377:8:0","nodeType":"ErrorDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"opIndex","nameLocation":"6394:7:0","nodeType":"VariableDeclaration","scope":116,"src":"6386:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":111,"name":"uint256","nodeType":"ElementaryTypeName","src":"6386:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"reason","nameLocation":"6410:6:0","nodeType":"VariableDeclaration","scope":116,"src":"6403:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":113,"name":"string","nodeType":"ElementaryTypeName","src":"6403:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6385:32:0"},"src":"6371:47:0"},{"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"6424:101:0","text":" @dev A user operation at `opIndex` failed with `reason` and `inner` returned data."},"errorSelector":"65c8fd4d","id":125,"name":"FailedOpWithRevert","nameLocation":"6536:18:0","nodeType":"ErrorDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"opIndex","nameLocation":"6563:7:0","nodeType":"VariableDeclaration","scope":125,"src":"6555:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"6555:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":121,"mutability":"mutable","name":"reason","nameLocation":"6579:6:0","nodeType":"VariableDeclaration","scope":125,"src":"6572:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":120,"name":"string","nodeType":"ElementaryTypeName","src":"6572:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"inner","nameLocation":"6593:5:0","nodeType":"VariableDeclaration","scope":125,"src":"6587:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":122,"name":"bytes","nodeType":"ElementaryTypeName","src":"6587:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6554:45:0"},"src":"6530:70:0"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"6606:75:0","text":" @dev Batch of aggregated user operations per aggregator."},"id":136,"members":[{"constant":false,"id":130,"mutability":"mutable","name":"userOps","nameLocation":"6746:7:0","nodeType":"VariableDeclaration","scope":136,"src":"6724:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$21_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":128,"nodeType":"UserDefinedTypeName","pathNode":{"id":127,"name":"PackedUserOperation","nameLocations":["6724:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"6724:19:0"},"referencedDeclaration":21,"src":"6724:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_storage_ptr","typeString":"struct PackedUserOperation"}},"id":129,"nodeType":"ArrayTypeName","src":"6724:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$21_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"aggregator","nameLocation":"6775:10:0","nodeType":"VariableDeclaration","scope":136,"src":"6763:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$52","typeString":"contract IAggregator"},"typeName":{"id":132,"nodeType":"UserDefinedTypeName","pathNode":{"id":131,"name":"IAggregator","nameLocations":["6763:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":52,"src":"6763:11:0"},"referencedDeclaration":52,"src":"6763:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$52","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":135,"mutability":"mutable","name":"signature","nameLocation":"6801:9:0","nodeType":"VariableDeclaration","scope":136,"src":"6795:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":134,"name":"bytes","nodeType":"ElementaryTypeName","src":"6795:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"6693:20:0","nodeType":"StructDefinition","scope":157,"src":"6686:131:0","visibility":"public"},{"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"6823:148:0","text":" @dev Executes a batch of user operations.\n @param beneficiary Address to which gas is refunded up completing the execution."},"functionSelector":"765e827f","id":146,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"6985:9:0","nodeType":"FunctionDefinition","parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"ops","nameLocation":"7026:3:0","nodeType":"VariableDeclaration","scope":146,"src":"6995:34:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$21_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":139,"nodeType":"UserDefinedTypeName","pathNode":{"id":138,"name":"PackedUserOperation","nameLocations":["6995:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"6995:19:0"},"referencedDeclaration":21,"src":"6995:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_storage_ptr","typeString":"struct PackedUserOperation"}},"id":140,"nodeType":"ArrayTypeName","src":"6995:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$21_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"beneficiary","nameLocation":"7047:11:0","nodeType":"VariableDeclaration","scope":146,"src":"7031:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"7031:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6994:65:0"},"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[],"src":"7068:0:0"},"scope":157,"src":"6976:93:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"7075:174:0","text":" @dev Executes a batch of aggregated user operations per aggregator.\n @param beneficiary Address to which gas is refunded up completing the execution."},"functionSelector":"dbed18e0","id":156,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"7263:19:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"7324:16:0","nodeType":"VariableDeclaration","scope":156,"src":"7292:48:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$136_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":149,"nodeType":"UserDefinedTypeName","pathNode":{"id":148,"name":"UserOpsPerAggregator","nameLocations":["7292:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":136,"src":"7292:20:0"},"referencedDeclaration":136,"src":"7292:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$136_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":150,"nodeType":"ArrayTypeName","src":"7292:22:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$136_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"beneficiary","nameLocation":"7366:11:0","nodeType":"VariableDeclaration","scope":156,"src":"7350:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"7350:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"7282:101:0"},"returnParameters":{"id":155,"nodeType":"ParameterList","parameters":[],"src":"7392:0:0"},"scope":157,"src":"7254:139:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":218,"src":"6224:1171:0","usedErrors":[116,125],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IAccount","contractDependencies":[],"contractKind":"interface","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"7397:55:0","text":" @dev Base interface for an ERC-4337 account."},"fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IAccount","nameLocation":"7463:8:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"7478:881:0","text":" @dev Validates a user operation.\n * MUST validate the caller is a trusted EntryPoint\n * MUST validate that the signature is a valid signature of the userOpHash, and SHOULD\n   return SIG_VALIDATION_FAILED (and not revert) on signature mismatch. Any other error MUST revert.\n * MUST pay the entryPoint (caller) at least the “missingAccountFunds” (which might\n   be zero, in case the current account’s deposit is high enough)\n Returns an encoded packed validation data that is composed of the following elements:\n - `authorizer` (`address`): 0 for success, 1 for failure, otherwise the address of an authorizer contract\n - `validUntil` (`uint48`): The UserOp is valid only up to this time. Zero for “infinite”.\n - `validAfter` (`uint48`): The UserOp is valid only after this time."},"functionSelector":"19822f7c","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"8373:14:0","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"userOp","nameLocation":"8426:6:0","nodeType":"VariableDeclaration","scope":171,"src":"8397:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":161,"nodeType":"UserDefinedTypeName","pathNode":{"id":160,"name":"PackedUserOperation","nameLocations":["8397:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"8397:19:0"},"referencedDeclaration":21,"src":"8397:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"userOpHash","nameLocation":"8450:10:0","nodeType":"VariableDeclaration","scope":171,"src":"8442:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8442:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"8478:19:0","nodeType":"VariableDeclaration","scope":171,"src":"8470:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"8470:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8387:116:0"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"validationData","nameLocation":"8530:14:0","nodeType":"VariableDeclaration","scope":171,"src":"8522:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"8522:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8521:24:0"},"scope":172,"src":"8364:182:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":218,"src":"7453:1095:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IAccountExecute","contractDependencies":[],"contractKind":"interface","documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"8550:143:0","text":" @dev Support for executing user operations by prepending the {executeUserOp} function selector\n to the UserOperation's `callData`."},"fullyImplemented":false,"id":183,"linearizedBaseContracts":[183],"name":"IAccountExecute","nameLocation":"8704:15:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"8726:50:0","text":" @dev Executes a user operation."},"functionSelector":"8dd7712f","id":182,"implemented":false,"kind":"function","modifiers":[],"name":"executeUserOp","nameLocation":"8790:13:0","nodeType":"FunctionDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"userOp","nameLocation":"8833:6:0","nodeType":"VariableDeclaration","scope":182,"src":"8804:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":176,"nodeType":"UserDefinedTypeName","pathNode":{"id":175,"name":"PackedUserOperation","nameLocations":["8804:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"8804:19:0"},"referencedDeclaration":21,"src":"8804:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"userOpHash","nameLocation":"8849:10:0","nodeType":"VariableDeclaration","scope":182,"src":"8841:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8841:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8803:57:0"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"8869:0:0"},"scope":183,"src":"8781:89:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":218,"src":"8694:178:0","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"8874:227:0","text":" @dev Interface for a paymaster contract that agrees to pay for the gas costs of a user operation.\n NOTE: A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":217,"linearizedBaseContracts":[217],"name":"IPaymaster","nameLocation":"9112:10:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":188,"members":[{"id":185,"name":"opSucceeded","nameLocation":"9155:11:0","nodeType":"EnumValue","src":"9155:11:0"},{"id":186,"name":"opReverted","nameLocation":"9176:10:0","nodeType":"EnumValue","src":"9176:10:0"},{"id":187,"name":"postOpReverted","nameLocation":"9196:14:0","nodeType":"EnumValue","src":"9196:14:0"}],"name":"PostOpMode","nameLocation":"9134:10:0","nodeType":"EnumDefinition","src":"9129:87:0"},{"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"9222:286:0","text":" @dev Validates whether the paymaster is willing to pay for the user operation. See\n {IAccount-validateUserOp} for additional information on the return value.\n NOTE: Bundlers will reject this method if it modifies the state, unless it's whitelisted."},"functionSelector":"52b7512c","id":203,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"9522:23:0","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"userOp","nameLocation":"9584:6:0","nodeType":"VariableDeclaration","scope":203,"src":"9555:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":191,"nodeType":"UserDefinedTypeName","pathNode":{"id":190,"name":"PackedUserOperation","nameLocations":["9555:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"9555:19:0"},"referencedDeclaration":21,"src":"9555:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"userOpHash","nameLocation":"9608:10:0","nodeType":"VariableDeclaration","scope":203,"src":"9600:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9600:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"maxCost","nameLocation":"9636:7:0","nodeType":"VariableDeclaration","scope":203,"src":"9628:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:104:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"context","nameLocation":"9681:7:0","nodeType":"VariableDeclaration","scope":203,"src":"9668:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":198,"name":"bytes","nodeType":"ElementaryTypeName","src":"9668:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"validationData","nameLocation":"9698:14:0","nodeType":"VariableDeclaration","scope":203,"src":"9690:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9667:46:0"},"scope":217,"src":"9513:201:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"9720:299:0","text":" @dev Verifies the sender is the entrypoint.\n @param actualGasCost the actual amount paid (by account or paymaster) for this UserOperation\n @param actualUserOpFeePerGas total gas used by this UserOperation (including preVerification, creation, validation and execution)"},"functionSelector":"7c627b21","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"10033:6:0","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"mode","nameLocation":"10060:4:0","nodeType":"VariableDeclaration","scope":216,"src":"10049:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$188","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":206,"nodeType":"UserDefinedTypeName","pathNode":{"id":205,"name":"PostOpMode","nameLocations":["10049:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":188,"src":"10049:10:0"},"referencedDeclaration":188,"src":"10049:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$188","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":209,"mutability":"mutable","name":"context","nameLocation":"10089:7:0","nodeType":"VariableDeclaration","scope":216,"src":"10074:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":208,"name":"bytes","nodeType":"ElementaryTypeName","src":"10074:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"actualGasCost","nameLocation":"10114:13:0","nodeType":"VariableDeclaration","scope":216,"src":"10106:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"10106:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"10145:21:0","nodeType":"VariableDeclaration","scope":216,"src":"10137:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"10137:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10039:133:0"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"10181:0:0"},"scope":217,"src":"10024:158:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":218,"src":"9102:1082:0","usedErrors":[],"usedEvents":[]}],"src":"113:10072:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC7579.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC7579.sol","exportedSymbols":{"Execution":[317],"IERC7579AccountConfig":[362],"IERC7579Execution":[338],"IERC7579Hook":[310],"IERC7579Module":[261],"IERC7579ModuleConfig":[408],"IERC7579Validator":[288],"MODULE_TYPE_EXECUTOR":[233],"MODULE_TYPE_FALLBACK":[236],"MODULE_TYPE_HOOK":[239],"MODULE_TYPE_VALIDATOR":[230],"PackedUserOperation":[21],"VALIDATION_FAILED":[227],"VALIDATION_SUCCESS":[224]},"id":409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":219,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC4337.sol","file":"./draft-IERC4337.sol","id":221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":409,"sourceUnit":218,"src":"138:57:1","symbolAliases":[{"foreign":{"id":220,"name":"PackedUserOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"146:19:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"constant":true,"id":224,"mutability":"constant","name":"VALIDATION_SUCCESS","nameLocation":"214:18:1","nodeType":"VariableDeclaration","scope":409,"src":"197:39:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"197:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"235:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":227,"mutability":"constant","name":"VALIDATION_FAILED","nameLocation":"255:17:1","nodeType":"VariableDeclaration","scope":409,"src":"238:38:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"238:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"275:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":230,"mutability":"constant","name":"MODULE_TYPE_VALIDATOR","nameLocation":"295:21:1","nodeType":"VariableDeclaration","scope":409,"src":"278:42:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"278:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"319:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":233,"mutability":"constant","name":"MODULE_TYPE_EXECUTOR","nameLocation":"339:20:1","nodeType":"VariableDeclaration","scope":409,"src":"322:41:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"322:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"362:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":236,"mutability":"constant","name":"MODULE_TYPE_FALLBACK","nameLocation":"382:20:1","nodeType":"VariableDeclaration","scope":409,"src":"365:41:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"365:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"405:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":239,"mutability":"constant","name":"MODULE_TYPE_HOOK","nameLocation":"425:16:1","nodeType":"VariableDeclaration","scope":409,"src":"408:37:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"444:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC7579Module","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"448:62:1","text":"@dev Minimal configuration interface for ERC-7579 modules"},"fullyImplemented":false,"id":261,"linearizedBaseContracts":[261],"name":"IERC7579Module","nameLocation":"520:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"541:276:1","text":" @dev This function is called by the smart account during installation of the module\n @param data arbitrary data that may be required on the module during `onInstall` initialization\n MUST revert on error (e.g. if module is already enabled)"},"functionSelector":"6d61fe70","id":246,"implemented":false,"kind":"function","modifiers":[],"name":"onInstall","nameLocation":"831:9:1","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"data","nameLocation":"856:4:1","nodeType":"VariableDeclaration","scope":246,"src":"841:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":242,"name":"bytes","nodeType":"ElementaryTypeName","src":"841:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"840:21:1"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"870:0:1"},"scope":261,"src":"822:49:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"877:247:1","text":" @dev This function is called by the smart account during uninstallation of the module\n @param data arbitrary data that may be required on the module during `onUninstall` de-initialization\n MUST revert on error"},"functionSelector":"8a91b0e3","id":252,"implemented":false,"kind":"function","modifiers":[],"name":"onUninstall","nameLocation":"1138:11:1","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"data","nameLocation":"1165:4:1","nodeType":"VariableDeclaration","scope":252,"src":"1150:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":248,"name":"bytes","nodeType":"ElementaryTypeName","src":"1150:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1149:21:1"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"1179:0:1"},"scope":261,"src":"1129:51:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"1186:233:1","text":" @dev Returns boolean value if module is a certain type\n @param moduleTypeId the module type ID according the ERC-7579 spec\n MUST return true if the module is of the given type and false otherwise"},"functionSelector":"ecd05961","id":260,"implemented":false,"kind":"function","modifiers":[],"name":"isModuleType","nameLocation":"1433:12:1","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"moduleTypeId","nameLocation":"1454:12:1","nodeType":"VariableDeclaration","scope":260,"src":"1446:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1445:22:1"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":260,"src":"1491:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":257,"name":"bool","nodeType":"ElementaryTypeName","src":"1491:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1490:6:1"},"scope":261,"src":"1424:73:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":409,"src":"510:989:1","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":263,"name":"IERC7579Module","nameLocations":["1666:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":261,"src":"1666:14:1"},"id":264,"nodeType":"InheritanceSpecifier","src":"1666:14:1"}],"canonicalName":"IERC7579Validator","contractDependencies":[],"contractKind":"interface","documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"1501:133:1","text":" @dev ERC-7579 Validation module (type 1).\n A module that implements logic to validate user operations and signatures."},"fullyImplemented":false,"id":288,"linearizedBaseContracts":[288,261],"name":"IERC7579Validator","nameLocation":"1645:17:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"1687:436:1","text":" @dev Validates a UserOperation\n @param userOp the ERC-4337 PackedUserOperation\n @param userOpHash the hash of the ERC-4337 PackedUserOperation\n MUST validate that the signature is a valid signature of the userOpHash\n SHOULD return ERC-4337's SIG_VALIDATION_FAILED (and not revert) on signature mismatch\n See {IAccount-validateUserOp} for additional information on the return value"},"functionSelector":"97003203","id":275,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"2137:14:1","nodeType":"FunctionDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"userOp","nameLocation":"2181:6:1","nodeType":"VariableDeclaration","scope":275,"src":"2152:35:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":267,"nodeType":"UserDefinedTypeName","pathNode":{"id":266,"name":"PackedUserOperation","nameLocations":["2152:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2152:19:1"},"referencedDeclaration":21,"src":"2152:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$21_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"userOpHash","nameLocation":"2197:10:1","nodeType":"VariableDeclaration","scope":275,"src":"2189:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2189:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2151:57:1"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":275,"src":"2227:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"2227:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2226:9:1"},"scope":288,"src":"2128:108:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"2242:367:1","text":" @dev Validates a signature using ERC-1271\n @param sender the address that sent the ERC-1271 request to the smart account\n @param hash the hash of the ERC-1271 request\n @param signature the signature of the ERC-1271 request\n MUST return the ERC-1271 `MAGIC_VALUE` if the signature is valid\n MUST NOT modify state"},"functionSelector":"f551e2ee","id":287,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignatureWithSender","nameLocation":"2623:26:1","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"sender","nameLocation":"2667:6:1","nodeType":"VariableDeclaration","scope":287,"src":"2659:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"2659:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"hash","nameLocation":"2691:4:1","nodeType":"VariableDeclaration","scope":287,"src":"2683:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2683:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"signature","nameLocation":"2720:9:1","nodeType":"VariableDeclaration","scope":287,"src":"2705:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":281,"name":"bytes","nodeType":"ElementaryTypeName","src":"2705:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2649:86:1"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":287,"src":"2759:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":284,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:8:1"},"scope":288,"src":"2614:153:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":409,"src":"1635:1134:1","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":290,"name":"IERC7579Module","nameLocations":["2984:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":261,"src":"2984:14:1"},"id":291,"nodeType":"InheritanceSpecifier","src":"2984:14:1"}],"canonicalName":"IERC7579Hook","contractDependencies":[],"contractKind":"interface","documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"2771:186:1","text":" @dev ERC-7579 Hooks module (type 4).\n A module that implements logic to execute before and after the account executes a user operation,\n either individually or batched."},"fullyImplemented":false,"id":310,"linearizedBaseContracts":[310,261],"name":"IERC7579Hook","nameLocation":"2968:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"3005:336:1","text":" @dev Called by the smart account before execution\n @param msgSender the address that called the smart account\n @param value the value that was sent to the smart account\n @param msgData the data that was sent to the smart account\n MAY return arbitrary data in the `hookData` return value"},"functionSelector":"d68f6025","id":303,"implemented":false,"kind":"function","modifiers":[],"name":"preCheck","nameLocation":"3355:8:1","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"msgSender","nameLocation":"3381:9:1","nodeType":"VariableDeclaration","scope":303,"src":"3373:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"3373:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"value","nameLocation":"3408:5:1","nodeType":"VariableDeclaration","scope":303,"src":"3400:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"3400:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"msgData","nameLocation":"3438:7:1","nodeType":"VariableDeclaration","scope":303,"src":"3423:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":297,"name":"bytes","nodeType":"ElementaryTypeName","src":"3423:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3363:88:1"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"hookData","nameLocation":"3483:8:1","nodeType":"VariableDeclaration","scope":303,"src":"3470:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":300,"name":"bytes","nodeType":"ElementaryTypeName","src":"3470:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3469:23:1"},"scope":310,"src":"3346:147:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"3499:245:1","text":" @dev Called by the smart account after execution\n @param hookData the data that was returned by the `preCheck` function\n MAY validate the `hookData` to validate transaction context of the `preCheck` function"},"functionSelector":"173bf7da","id":309,"implemented":false,"kind":"function","modifiers":[],"name":"postCheck","nameLocation":"3758:9:1","nodeType":"FunctionDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"hookData","nameLocation":"3783:8:1","nodeType":"VariableDeclaration","scope":309,"src":"3768:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":305,"name":"bytes","nodeType":"ElementaryTypeName","src":"3768:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3767:25:1"},"returnParameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"3801:0:1"},"scope":310,"src":"3749:53:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":409,"src":"2958:846:1","usedErrors":[],"usedEvents":[]},{"canonicalName":"Execution","id":317,"members":[{"constant":false,"id":312,"mutability":"mutable","name":"target","nameLocation":"3837:6:1","nodeType":"VariableDeclaration","scope":317,"src":"3829:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"3829:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"value","nameLocation":"3857:5:1","nodeType":"VariableDeclaration","scope":317,"src":"3849:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3849:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"callData","nameLocation":"3874:8:1","nodeType":"VariableDeclaration","scope":317,"src":"3868:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":315,"name":"bytes","nodeType":"ElementaryTypeName","src":"3868:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Execution","nameLocation":"3813:9:1","nodeType":"StructDefinition","scope":409,"src":"3806:79:1","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC7579Execution","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"3887:150:1","text":" @dev ERC-7579 Execution.\n Accounts should implement this interface so that the Entrypoint and ERC-7579 modules can execute operations."},"fullyImplemented":false,"id":338,"linearizedBaseContracts":[338],"name":"IERC7579Execution","nameLocation":"4048:17:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"4072:419:1","text":" @dev Executes a transaction on behalf of the account.\n @param mode The encoded execution mode of the transaction. See ModeLib.sol for details\n @param executionCalldata The encoded execution call data\n MUST ensure adequate authorization control: e.g. onlyEntryPointOrSelf if used with ERC-4337\n If a mode is requested that is not supported by the Account, it MUST revert"},"functionSelector":"e9ae5c53","id":326,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"4505:7:1","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"mode","nameLocation":"4521:4:1","nodeType":"VariableDeclaration","scope":326,"src":"4513:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4513:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"executionCalldata","nameLocation":"4542:17:1","nodeType":"VariableDeclaration","scope":326,"src":"4527:32:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":322,"name":"bytes","nodeType":"ElementaryTypeName","src":"4527:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4512:48:1"},"returnParameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"4577:0:1"},"scope":338,"src":"4496:82:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"4584:552:1","text":" @dev Executes a transaction on behalf of the account.\n         This function is intended to be called by Executor Modules\n @param mode The encoded execution mode of the transaction. See ModeLib.sol for details\n @param executionCalldata The encoded execution call data\n @return returnData An array with the returned data of each executed subcall\n MUST ensure adequate authorization control: i.e. onlyExecutorModule\n If a mode is requested that is not supported by the Account, it MUST revert"},"functionSelector":"d691c964","id":337,"implemented":false,"kind":"function","modifiers":[],"name":"executeFromExecutor","nameLocation":"5150:19:1","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"mode","nameLocation":"5187:4:1","nodeType":"VariableDeclaration","scope":337,"src":"5179:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5179:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"executionCalldata","nameLocation":"5216:17:1","nodeType":"VariableDeclaration","scope":337,"src":"5201:32:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":330,"name":"bytes","nodeType":"ElementaryTypeName","src":"5201:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5169:70:1"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"returnData","nameLocation":"5281:10:1","nodeType":"VariableDeclaration","scope":337,"src":"5266:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":333,"name":"bytes","nodeType":"ElementaryTypeName","src":"5266:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":334,"nodeType":"ArrayTypeName","src":"5266:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5265:27:1"},"scope":338,"src":"5141:152:1","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":409,"src":"4038:1257:1","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC7579AccountConfig","contractDependencies":[],"contractKind":"interface","documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"5297:174:1","text":" @dev ERC-7579 Account Config.\n Accounts should implement this interface to expose information that identifies the account, supported modules and capabilities."},"fullyImplemented":false,"id":362,"linearizedBaseContracts":[362],"name":"IERC7579AccountConfig","nameLocation":"5482:21:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"5510:341:1","text":" @dev Returns the account id of the smart account\n @return accountImplementationId the account id of the smart account\n MUST return a non-empty string\n The accountId SHOULD be structured like so:\n        \"vendorname.accountname.semver\"\n The id SHOULD be unique across all smart accounts"},"functionSelector":"9cfd7cff","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"accountId","nameLocation":"5865:9:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"5874:2:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"accountImplementationId","nameLocation":"5914:23:1","nodeType":"VariableDeclaration","scope":345,"src":"5900:37:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":342,"name":"string","nodeType":"ElementaryTypeName","src":"5900:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5899:39:1"},"scope":362,"src":"5856:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"5945:229:1","text":" @dev Function to check if the account supports a certain execution mode (see above)\n @param encodedMode the encoded mode\n MUST return true if the account supports the mode and false otherwise"},"functionSelector":"d03c7914","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"supportsExecutionMode","nameLocation":"6188:21:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"encodedMode","nameLocation":"6218:11:1","nodeType":"VariableDeclaration","scope":353,"src":"6210:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6210:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6209:21:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"6254:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":350,"name":"bool","nodeType":"ElementaryTypeName","src":"6254:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6253:6:1"},"scope":362,"src":"6179:81:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"6266:257:1","text":" @dev Function to check if the account supports a certain module typeId\n @param moduleTypeId the module type ID according to the ERC-7579 spec\n MUST return true if the account supports the module type and false otherwise"},"functionSelector":"f2dc691d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"supportsModule","nameLocation":"6537:14:1","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"moduleTypeId","nameLocation":"6560:12:1","nodeType":"VariableDeclaration","scope":361,"src":"6552:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"6552:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6551:22:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"6597:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":358,"name":"bool","nodeType":"ElementaryTypeName","src":"6597:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6596:6:1"},"scope":362,"src":"6528:75:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":409,"src":"5472:1133:1","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC7579ModuleConfig","contractDependencies":[],"contractKind":"interface","documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"6607:132:1","text":" @dev ERC-7579 Module Config.\n Accounts should implement this interface to allow installing and uninstalling modules."},"fullyImplemented":false,"id":408,"linearizedBaseContracts":[408],"name":"IERC7579ModuleConfig","nameLocation":"6750:20:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"d21d0b289f126c4b473ea641963e766833c2f13866e4ff480abd787c100ef123","id":369,"name":"ModuleInstalled","nameLocation":"6783:15:1","nodeType":"EventDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"indexed":false,"mutability":"mutable","name":"moduleTypeId","nameLocation":"6807:12:1","nodeType":"VariableDeclaration","scope":369,"src":"6799:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"6799:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":367,"indexed":false,"mutability":"mutable","name":"module","nameLocation":"6829:6:1","nodeType":"VariableDeclaration","scope":369,"src":"6821:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"6821:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6798:38:1"},"src":"6777:60:1"},{"anonymous":false,"eventSelector":"341347516a9de374859dfda710fa4828b2d48cb57d4fbe4c1149612b8e02276e","id":375,"name":"ModuleUninstalled","nameLocation":"6848:17:1","nodeType":"EventDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"indexed":false,"mutability":"mutable","name":"moduleTypeId","nameLocation":"6874:12:1","nodeType":"VariableDeclaration","scope":375,"src":"6866:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"6866:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":373,"indexed":false,"mutability":"mutable","name":"module","nameLocation":"6896:6:1","nodeType":"VariableDeclaration","scope":375,"src":"6888:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6865:38:1"},"src":"6842:62:1"},{"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"6910:584:1","text":" @dev Installs a Module of a certain type on the smart account\n @param moduleTypeId the module type ID according to the ERC-7579 spec\n @param module the module address\n @param initData arbitrary data that may be required on the module during `onInstall`\n initialization.\n MUST implement authorization control\n MUST call `onInstall` on the module with the `initData` parameter if provided\n MUST emit ModuleInstalled event\n MUST revert if the module is already installed or the initialization on the module failed"},"functionSelector":"9517e29f","id":385,"implemented":false,"kind":"function","modifiers":[],"name":"installModule","nameLocation":"7508:13:1","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"moduleTypeId","nameLocation":"7530:12:1","nodeType":"VariableDeclaration","scope":385,"src":"7522:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"7522:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":380,"mutability":"mutable","name":"module","nameLocation":"7552:6:1","nodeType":"VariableDeclaration","scope":385,"src":"7544:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"7544:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"initData","nameLocation":"7575:8:1","nodeType":"VariableDeclaration","scope":385,"src":"7560:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":381,"name":"bytes","nodeType":"ElementaryTypeName","src":"7560:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7521:63:1"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"7593:0:1"},"scope":408,"src":"7499:95:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"7600:589:1","text":" @dev Uninstalls a Module of a certain type on the smart account\n @param moduleTypeId the module type ID according the ERC-7579 spec\n @param module the module address\n @param deInitData arbitrary data that may be required on the module during `onInstall`\n initialization.\n MUST implement authorization control\n MUST call `onUninstall` on the module with the `deInitData` parameter if provided\n MUST emit ModuleUninstalled event\n MUST revert if the module is not installed or the deInitialization on the module failed"},"functionSelector":"a71763a8","id":395,"implemented":false,"kind":"function","modifiers":[],"name":"uninstallModule","nameLocation":"8203:15:1","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"moduleTypeId","nameLocation":"8227:12:1","nodeType":"VariableDeclaration","scope":395,"src":"8219:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"8219:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"module","nameLocation":"8249:6:1","nodeType":"VariableDeclaration","scope":395,"src":"8241:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"8241:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"deInitData","nameLocation":"8272:10:1","nodeType":"VariableDeclaration","scope":395,"src":"8257:25:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":391,"name":"bytes","nodeType":"ElementaryTypeName","src":"8257:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8218:65:1"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"8292:0:1"},"scope":408,"src":"8194:99:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"8299:382:1","text":" @dev Returns whether a module is installed on the smart account\n @param moduleTypeId the module type ID according the ERC-7579 spec\n @param module the module address\n @param additionalContext arbitrary data that may be required to determine if the module is installed\n MUST return true if the module is installed and false otherwise"},"functionSelector":"112d3a7d","id":407,"implemented":false,"kind":"function","modifiers":[],"name":"isModuleInstalled","nameLocation":"8695:17:1","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"moduleTypeId","nameLocation":"8730:12:1","nodeType":"VariableDeclaration","scope":407,"src":"8722:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"8722:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"module","nameLocation":"8760:6:1","nodeType":"VariableDeclaration","scope":407,"src":"8752:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"8752:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"additionalContext","nameLocation":"8791:17:1","nodeType":"VariableDeclaration","scope":407,"src":"8776:32:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":401,"name":"bytes","nodeType":"ElementaryTypeName","src":"8776:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8712:102:1"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"8838:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":404,"name":"bool","nodeType":"ElementaryTypeName","src":"8838:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8837:6:1"},"scope":408,"src":"8686:158:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":409,"src":"6740:2106:1","usedErrors":[],"usedEvents":[369,375]}],"src":"112:8735:1"},"id":1},"contracts/CounterModule.sol":{"ast":{"absolutePath":"contracts/CounterModule.sol","exportedSymbols":{"CounterModule":[509],"IERC7579Module":[261],"MODULE_TYPE_EXECUTOR":[233]},"id":510,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":410,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC7579.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC7579.sol","id":413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":510,"sourceUnit":409,"src":"58:107:2","symbolAliases":[{"foreign":{"id":411,"name":"IERC7579Module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"66:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":412,"name":"MODULE_TYPE_EXECUTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"82:20:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":414,"name":"IERC7579Module","nameLocations":["193:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":261,"src":"193:14:2"},"id":415,"nodeType":"InheritanceSpecifier","src":"193:14:2"}],"canonicalName":"CounterModule","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":509,"linearizedBaseContracts":[509,261],"name":"CounterModule","nameLocation":"176:13:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":418,"mutability":"constant","name":"_moduleTypeId","nameLocation":"239:13:2","nodeType":"VariableDeclaration","scope":509,"src":"214:61:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"214:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"id":417,"name":"MODULE_TYPE_EXECUTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"255:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":422,"mutability":"mutable","name":"_numbers","nameLocation":"333:8:2","nodeType":"VariableDeclaration","scope":509,"src":"282:59:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":421,"keyName":"account","keyNameLocation":"298:7:2","keyType":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"290:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"282:42:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"number","valueNameLocation":"317:6:2","valueType":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"309:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"1bb2cf2ce981360109c48db05416ea380edeec6b23f5266b1cc3be41e24a3e94","id":428,"name":"ModuleInstalledReceived","nameLocation":"354:23:2","nodeType":"EventDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"386:7:2","nodeType":"VariableDeclaration","scope":428,"src":"378:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"378:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":426,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"401:4:2","nodeType":"VariableDeclaration","scope":428,"src":"395:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":425,"name":"bytes","nodeType":"ElementaryTypeName","src":"395:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"377:29:2"},"src":"348:59:2"},{"anonymous":false,"eventSelector":"c8913c4ab45f9cf985973c570fc361bb110b13a7312ed2210427746284f65f4c","id":434,"name":"ModuleUninstalledReceived","nameLocation":"418:25:2","nodeType":"EventDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"452:7:2","nodeType":"VariableDeclaration","scope":434,"src":"444:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":432,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"467:4:2","nodeType":"VariableDeclaration","scope":434,"src":"461:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":431,"name":"bytes","nodeType":"ElementaryTypeName","src":"461:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"443:29:2"},"src":"412:61:2"},{"baseFunctions":[246],"body":{"id":459,"nodeType":"Block","src":"534:181:2","statements":[{"assignments":[440],"declarations":[{"constant":false,"id":440,"mutability":"mutable","name":"number","nameLocation":"588:6:2","nodeType":"VariableDeclaration","scope":459,"src":"580:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"580:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":448,"initialValue":{"arguments":[{"id":443,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"608:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"615:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"615:7:2","typeDescriptions":{}}}],"id":446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"614:9:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":441,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"597:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"601:6:2","memberName":"decode","nodeType":"MemberAccess","src":"597:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"597:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"580:44:2"},{"expression":{"arguments":[{"id":450,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"644:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":449,"name":"setNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"634:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"634:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":452,"nodeType":"ExpressionStatement","src":"634:17:2"},{"eventCall":{"arguments":[{"expression":{"id":454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"691:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"695:6:2","memberName":"sender","nodeType":"MemberAccess","src":"691:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":456,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"703:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":453,"name":"ModuleInstalledReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"667:23:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"667:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":458,"nodeType":"EmitStatement","src":"662:46:2"}]},"functionSelector":"6d61fe70","id":460,"implemented":true,"kind":"function","modifiers":[],"name":"onInstall","nameLocation":"488:9:2","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"data","nameLocation":"513:4:2","nodeType":"VariableDeclaration","scope":460,"src":"498:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":435,"name":"bytes","nodeType":"ElementaryTypeName","src":"498:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"497:21:2"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[],"src":"534:0:2"},"scope":509,"src":"479:236:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[252],"body":{"id":471,"nodeType":"Block","src":"778:65:2","statements":[{"eventCall":{"arguments":[{"expression":{"id":466,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"819:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"823:6:2","memberName":"sender","nodeType":"MemberAccess","src":"819:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"831:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":465,"name":"ModuleUninstalledReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"793:25:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"793:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":470,"nodeType":"EmitStatement","src":"788:48:2"}]},"functionSelector":"8a91b0e3","id":472,"implemented":true,"kind":"function","modifiers":[],"name":"onUninstall","nameLocation":"730:11:2","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"data","nameLocation":"757:4:2","nodeType":"VariableDeclaration","scope":472,"src":"742:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"742:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"741:21:2"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"778:0:2"},"scope":509,"src":"721:122:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[260],"body":{"id":483,"nodeType":"Block","src":"922:53:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"moduleTypeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"939:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":480,"name":"_moduleTypeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"955:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"939:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":478,"id":482,"nodeType":"Return","src":"932:36:2"}]},"functionSelector":"ecd05961","id":484,"implemented":true,"kind":"function","modifiers":[],"name":"isModuleType","nameLocation":"858:12:2","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"moduleTypeId","nameLocation":"879:12:2","nodeType":"VariableDeclaration","scope":484,"src":"871:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"870:22:2"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":484,"src":"916:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":476,"name":"bool","nodeType":"ElementaryTypeName","src":"916:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"915:6:2"},"scope":509,"src":"849:126:2","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":496,"nodeType":"Block","src":"1064:46:2","statements":[{"expression":{"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":489,"name":"_numbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"1074:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":492,"indexExpression":{"expression":{"id":490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1083:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1087:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1083:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1074:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":493,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1097:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":495,"nodeType":"ExpressionStatement","src":"1074:29:2"}]},"functionSelector":"3fb5c1cb","id":497,"implemented":true,"kind":"function","modifiers":[],"name":"setNumber","nameLocation":"1031:9:2","nodeType":"FunctionDefinition","parameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"number","nameLocation":"1049:6:2","nodeType":"VariableDeclaration","scope":497,"src":"1041:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":485,"name":"uint256","nodeType":"ElementaryTypeName","src":"1041:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1040:16:2"},"returnParameters":{"id":488,"nodeType":"ParameterList","parameters":[],"src":"1064:0:2"},"scope":509,"src":"1022:88:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":507,"nodeType":"Block","src":"1167:44:2","statements":[{"expression":{"baseExpression":{"id":502,"name":"_numbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"1184:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":505,"indexExpression":{"expression":{"id":503,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1193:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1197:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1193:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1184:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":501,"id":506,"nodeType":"Return","src":"1177:27:2"}]},"functionSelector":"f2c9ecd8","id":508,"implemented":true,"kind":"function","modifiers":[],"name":"getNumber","nameLocation":"1125:9:2","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"1134:2:2"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"1158:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1158:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1157:9:2"},"scope":509,"src":"1116:95:2","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":510,"src":"167:1046:2","usedErrors":[],"usedEvents":[428,434]}],"src":"32:1182:2"},"id":2}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC4337.sol":{"IAccount":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base interface for an ERC-4337 account.\",\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Validates a user operation. * MUST validate the caller is a trusted EntryPoint * MUST validate that the signature is a valid signature of the userOpHash, and SHOULD   return SIG_VALIDATION_FAILED (and not revert) on signature mismatch. Any other error MUST revert. * MUST pay the entryPoint (caller) at least the \\u201cmissingAccountFunds\\u201d (which might   be zero, in case the current account\\u2019s deposit is high enough) Returns an encoded packed validation data that is composed of the following elements: - `authorizer` (`address`): 0 for success, 1 for failure, otherwise the address of an authorizer contract - `validUntil` (`uint48`): The UserOp is valid only up to this time. Zero for \\u201cinfinite\\u201d. - `validAfter` (`uint48`): The UserOp is valid only after this time.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":\"IAccount\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]}},\"version\":1}"},"IAccountExecute":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"}],"name":"executeUserOp","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":"8dd7712f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"}],\"name\":\"executeUserOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Support for executing user operations by prepending the {executeUserOp} function selector to the UserOperation's `callData`.\",\"kind\":\"dev\",\"methods\":{\"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)\":{\"details\":\"Executes a user operation.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":\"IAccountExecute\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]}},\"version\":1}"},"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatesSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])":"ae574a43","validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)":"2dd81133","validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"062a422b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatesSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Aggregates and validates multiple signatures for a batch of user operations. A contract could implement this interface with custom validation schemes that allow signature aggregation, enabling significant optimizations and gas savings for execution and transaction data cost. Bundlers and clients whitelist supported aggregators. See https://eips.ethereum.org/EIPS/eip-7766[ERC-7766]\",\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"details\":\"Returns an aggregated signature for a batch of user operation's signatures.\"},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"details\":\"Validates that the aggregated signature is valid for the user operations. Requirements: - The aggregated signature MUST match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"details\":\"Validates the signature for a user operation. Returns an alternative signature that should be used during bundling.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":\"IAggregator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]}},\"version\":1}"},"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"inner","type":"bytes"}],"name":"FailedOpWithRevert","type":"error"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getNonce(address,uint192)":"35567e1a","handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)":"dbed18e0","handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)":"765e827f","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"inner\",\"type\":\"bytes\"}],\"name\":\"FailedOpWithRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Entry point for user operations. User operations are validated and executed by this contract.\",\"errors\":{\"FailedOp(uint256,string)\":[{\"details\":\"A user operation at `opIndex` failed with `reason`.\"}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"details\":\"A user operation at `opIndex` failed with `reason` and `inner` returned data.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"details\":\"Adds stake to the account with an unstake delay of `unstakeDelaySec`.\"},\"balanceOf(address)\":{\"details\":\"Returns the balance of the account.\"},\"depositTo(address)\":{\"details\":\"Deposits `msg.value` to the account.\"},\"getNonce(address,uint192)\":{\"details\":\"Returns the nonce for a `sender` account and a `key`. Nonces for a certain `key` are always increasing.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"details\":\"Executes a batch of aggregated user operations per aggregator.\",\"params\":{\"beneficiary\":\"Address to which gas is refunded up completing the execution.\"}},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"details\":\"Executes a batch of user operations.\",\"params\":{\"beneficiary\":\"Address to which gas is refunded up completing the execution.\"}},\"unlockStake()\":{\"details\":\"Unlocks the stake of the account.\"},\"withdrawStake(address)\":{\"details\":\"Withdraws the stake of the account to `withdrawAddress`.\"},\"withdrawTo(address,uint256)\":{\"details\":\"Withdraws `withdrawAmount` from the account to `withdrawAddress`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":\"IEntryPoint\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]}},\"version\":1}"},"IEntryPointNonces":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Handle nonce management for accounts. Nonces are used in accounts as a replay protection mechanism and to ensure the order of user operations. To avoid limiting the number of operations an account can perform, the interface allows using parallel nonces by using a `key` parameter. See https://eips.ethereum.org/EIPS/eip-4337#semi-abstracted-nonce-support[ERC-4337 semi-abstracted nonce support].\",\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"details\":\"Returns the nonce for a `sender` account and a `key`. Nonces for a certain `key` are always increasing.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":\"IEntryPointNonces\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]}},\"version\":1}"},"IEntryPointStake":{"abi":[{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Handle stake management for entities (i.e. accounts, paymasters, factories). The EntryPoint must implement the following API to let entities like paymasters have a stake, and thus have more flexibility in their storage access (see https://eips.ethereum.org/EIPS/eip-4337#reputation-scoring-and-throttlingbanning-for-global-entities[reputation, throttling and banning.])\",\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"details\":\"Adds stake to the account with an unstake delay of `unstakeDelaySec`.\"},\"balanceOf(address)\":{\"details\":\"Returns the balance of the account.\"},\"depositTo(address)\":{\"details\":\"Deposits `msg.value` to the account.\"},\"unlockStake()\":{\"details\":\"Unlocks the stake of the account.\"},\"withdrawStake(address)\":{\"details\":\"Withdraws the stake of the account to `withdrawAddress`.\"},\"withdrawTo(address,uint256)\":{\"details\":\"Withdraws `withdrawAmount` from the account to `withdrawAddress`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":\"IEntryPointStake\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]}},\"version\":1}"},"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256,uint256)":"7c627b21","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for a paymaster contract that agrees to pay for the gas costs of a user operation. NOTE: A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"details\":\"Verifies the sender is the entrypoint.\",\"params\":{\"actualGasCost\":\"the actual amount paid (by account or paymaster) for this UserOperation\",\"actualUserOpFeePerGas\":\"total gas used by this UserOperation (including preVerification, creation, validation and execution)\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Validates whether the paymaster is willing to pay for the user operation. See {IAccount-validateUserOp} for additional information on the return value. NOTE: Bundlers will reject this method if it modifies the state, unless it's whitelisted.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":\"IPaymaster\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC7579.sol":{"IERC7579AccountConfig":{"abi":[{"inputs":[],"name":"accountId","outputs":[{"internalType":"string","name":"accountImplementationId","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"encodedMode","type":"bytes32"}],"name":"supportsExecutionMode","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"}],"name":"supportsModule","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"accountId()":"9cfd7cff","supportsExecutionMode(bytes32)":"d03c7914","supportsModule(uint256)":"f2dc691d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"accountId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"accountImplementationId\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"encodedMode\",\"type\":\"bytes32\"}],\"name\":\"supportsExecutionMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"}],\"name\":\"supportsModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-7579 Account Config. Accounts should implement this interface to expose information that identifies the account, supported modules and capabilities.\",\"kind\":\"dev\",\"methods\":{\"accountId()\":{\"details\":\"Returns the account id of the smart account\",\"returns\":{\"accountImplementationId\":\"the account id of the smart account MUST return a non-empty string The accountId SHOULD be structured like so:        \\\"vendorname.accountname.semver\\\" The id SHOULD be unique across all smart accounts\"}},\"supportsExecutionMode(bytes32)\":{\"details\":\"Function to check if the account supports a certain execution mode (see above)\",\"params\":{\"encodedMode\":\"the encoded mode MUST return true if the account supports the mode and false otherwise\"}},\"supportsModule(uint256)\":{\"details\":\"Function to check if the account supports a certain module typeId\",\"params\":{\"moduleTypeId\":\"the module type ID according to the ERC-7579 spec MUST return true if the account supports the module type and false otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":\"IERC7579AccountConfig\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":{\"keccak256\":\"0x0b2bccccbc46abbf9816dce8f021273d87955416787e99e13196180852f200d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5f103634337d36451c0b0d9434f97a3f83283783ee5b01d439f43f96edb6737\",\"dweb:/ipfs/QmdD9Nqmmdy1WXDQx64nrrGH7VGzhZwSJq1Y2p8dao6fnu\"]}},\"version\":1}"},"IERC7579Execution":{"abi":[{"inputs":[{"internalType":"bytes32","name":"mode","type":"bytes32"},{"internalType":"bytes","name":"executionCalldata","type":"bytes"}],"name":"execute","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"mode","type":"bytes32"},{"internalType":"bytes","name":"executionCalldata","type":"bytes"}],"name":"executeFromExecutor","outputs":[{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"execute(bytes32,bytes)":"e9ae5c53","executeFromExecutor(bytes32,bytes)":"d691c964"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"mode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"executionCalldata\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"mode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"executionCalldata\",\"type\":\"bytes\"}],\"name\":\"executeFromExecutor\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-7579 Execution. Accounts should implement this interface so that the Entrypoint and ERC-7579 modules can execute operations.\",\"kind\":\"dev\",\"methods\":{\"execute(bytes32,bytes)\":{\"details\":\"Executes a transaction on behalf of the account.\",\"params\":{\"executionCalldata\":\"The encoded execution call data MUST ensure adequate authorization control: e.g. onlyEntryPointOrSelf if used with ERC-4337 If a mode is requested that is not supported by the Account, it MUST revert\",\"mode\":\"The encoded execution mode of the transaction. See ModeLib.sol for details\"}},\"executeFromExecutor(bytes32,bytes)\":{\"details\":\"Executes a transaction on behalf of the account.         This function is intended to be called by Executor Modules\",\"params\":{\"executionCalldata\":\"The encoded execution call data\",\"mode\":\"The encoded execution mode of the transaction. See ModeLib.sol for details\"},\"returns\":{\"returnData\":\"An array with the returned data of each executed subcall MUST ensure adequate authorization control: i.e. onlyExecutorModule If a mode is requested that is not supported by the Account, it MUST revert\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":\"IERC7579Execution\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":{\"keccak256\":\"0x0b2bccccbc46abbf9816dce8f021273d87955416787e99e13196180852f200d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5f103634337d36451c0b0d9434f97a3f83283783ee5b01d439f43f96edb6737\",\"dweb:/ipfs/QmdD9Nqmmdy1WXDQx64nrrGH7VGzhZwSJq1Y2p8dao6fnu\"]}},\"version\":1}"},"IERC7579Hook":{"abi":[{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"}],"name":"isModuleType","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onInstall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onUninstall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"hookData","type":"bytes"}],"name":"postCheck","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"msgData","type":"bytes"}],"name":"preCheck","outputs":[{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isModuleType(uint256)":"ecd05961","onInstall(bytes)":"6d61fe70","onUninstall(bytes)":"8a91b0e3","postCheck(bytes)":"173bf7da","preCheck(address,uint256,bytes)":"d68f6025"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"}],\"name\":\"isModuleType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onInstall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onUninstall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"postCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"msgData\",\"type\":\"bytes\"}],\"name\":\"preCheck\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-7579 Hooks module (type 4). A module that implements logic to execute before and after the account executes a user operation, either individually or batched.\",\"kind\":\"dev\",\"methods\":{\"isModuleType(uint256)\":{\"details\":\"Returns boolean value if module is a certain type\",\"params\":{\"moduleTypeId\":\"the module type ID according the ERC-7579 spec MUST return true if the module is of the given type and false otherwise\"}},\"onInstall(bytes)\":{\"details\":\"This function is called by the smart account during installation of the module\",\"params\":{\"data\":\"arbitrary data that may be required on the module during `onInstall` initialization MUST revert on error (e.g. if module is already enabled)\"}},\"onUninstall(bytes)\":{\"details\":\"This function is called by the smart account during uninstallation of the module\",\"params\":{\"data\":\"arbitrary data that may be required on the module during `onUninstall` de-initialization MUST revert on error\"}},\"postCheck(bytes)\":{\"details\":\"Called by the smart account after execution\",\"params\":{\"hookData\":\"the data that was returned by the `preCheck` function MAY validate the `hookData` to validate transaction context of the `preCheck` function\"}},\"preCheck(address,uint256,bytes)\":{\"details\":\"Called by the smart account before execution\",\"params\":{\"msgData\":\"the data that was sent to the smart account MAY return arbitrary data in the `hookData` return value\",\"msgSender\":\"the address that called the smart account\",\"value\":\"the value that was sent to the smart account\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":\"IERC7579Hook\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":{\"keccak256\":\"0x0b2bccccbc46abbf9816dce8f021273d87955416787e99e13196180852f200d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5f103634337d36451c0b0d9434f97a3f83283783ee5b01d439f43f96edb6737\",\"dweb:/ipfs/QmdD9Nqmmdy1WXDQx64nrrGH7VGzhZwSJq1Y2p8dao6fnu\"]}},\"version\":1}"},"IERC7579Module":{"abi":[{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"}],"name":"isModuleType","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onInstall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onUninstall","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isModuleType(uint256)":"ecd05961","onInstall(bytes)":"6d61fe70","onUninstall(bytes)":"8a91b0e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"}],\"name\":\"isModuleType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onInstall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onUninstall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Minimal configuration interface for ERC-7579 modules\",\"kind\":\"dev\",\"methods\":{\"isModuleType(uint256)\":{\"details\":\"Returns boolean value if module is a certain type\",\"params\":{\"moduleTypeId\":\"the module type ID according the ERC-7579 spec MUST return true if the module is of the given type and false otherwise\"}},\"onInstall(bytes)\":{\"details\":\"This function is called by the smart account during installation of the module\",\"params\":{\"data\":\"arbitrary data that may be required on the module during `onInstall` initialization MUST revert on error (e.g. if module is already enabled)\"}},\"onUninstall(bytes)\":{\"details\":\"This function is called by the smart account during uninstallation of the module\",\"params\":{\"data\":\"arbitrary data that may be required on the module during `onUninstall` de-initialization MUST revert on error\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":\"IERC7579Module\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":{\"keccak256\":\"0x0b2bccccbc46abbf9816dce8f021273d87955416787e99e13196180852f200d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5f103634337d36451c0b0d9434f97a3f83283783ee5b01d439f43f96edb6737\",\"dweb:/ipfs/QmdD9Nqmmdy1WXDQx64nrrGH7VGzhZwSJq1Y2p8dao6fnu\"]}},\"version\":1}"},"IERC7579ModuleConfig":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"moduleTypeId","type":"uint256"},{"indexed":false,"internalType":"address","name":"module","type":"address"}],"name":"ModuleInstalled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"moduleTypeId","type":"uint256"},{"indexed":false,"internalType":"address","name":"module","type":"address"}],"name":"ModuleUninstalled","type":"event"},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"},{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}],"name":"installModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"},{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"additionalContext","type":"bytes"}],"name":"isModuleInstalled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"},{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"deInitData","type":"bytes"}],"name":"uninstallModule","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"installModule(uint256,address,bytes)":"9517e29f","isModuleInstalled(uint256,address,bytes)":"112d3a7d","uninstallModule(uint256,address,bytes)":"a71763a8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleInstalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleUninstalled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"name\":\"installModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalContext\",\"type\":\"bytes\"}],\"name\":\"isModuleInstalled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"deInitData\",\"type\":\"bytes\"}],\"name\":\"uninstallModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-7579 Module Config. Accounts should implement this interface to allow installing and uninstalling modules.\",\"kind\":\"dev\",\"methods\":{\"installModule(uint256,address,bytes)\":{\"details\":\"Installs a Module of a certain type on the smart account\",\"params\":{\"initData\":\"arbitrary data that may be required on the module during `onInstall` initialization. MUST implement authorization control MUST call `onInstall` on the module with the `initData` parameter if provided MUST emit ModuleInstalled event MUST revert if the module is already installed or the initialization on the module failed\",\"module\":\"the module address\",\"moduleTypeId\":\"the module type ID according to the ERC-7579 spec\"}},\"isModuleInstalled(uint256,address,bytes)\":{\"details\":\"Returns whether a module is installed on the smart account\",\"params\":{\"additionalContext\":\"arbitrary data that may be required to determine if the module is installed MUST return true if the module is installed and false otherwise\",\"module\":\"the module address\",\"moduleTypeId\":\"the module type ID according the ERC-7579 spec\"}},\"uninstallModule(uint256,address,bytes)\":{\"details\":\"Uninstalls a Module of a certain type on the smart account\",\"params\":{\"deInitData\":\"arbitrary data that may be required on the module during `onInstall` initialization. MUST implement authorization control MUST call `onUninstall` on the module with the `deInitData` parameter if provided MUST emit ModuleUninstalled event MUST revert if the module is not installed or the deInitialization on the module failed\",\"module\":\"the module address\",\"moduleTypeId\":\"the module type ID according the ERC-7579 spec\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":\"IERC7579ModuleConfig\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":{\"keccak256\":\"0x0b2bccccbc46abbf9816dce8f021273d87955416787e99e13196180852f200d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5f103634337d36451c0b0d9434f97a3f83283783ee5b01d439f43f96edb6737\",\"dweb:/ipfs/QmdD9Nqmmdy1WXDQx64nrrGH7VGzhZwSJq1Y2p8dao6fnu\"]}},\"version\":1}"},"IERC7579Validator":{"abi":[{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"}],"name":"isModuleType","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignatureWithSender","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onInstall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onUninstall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isModuleType(uint256)":"ecd05961","isValidSignatureWithSender(address,bytes32,bytes)":"f551e2ee","onInstall(bytes)":"6d61fe70","onUninstall(bytes)":"8a91b0e3","validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":"97003203"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"}],\"name\":\"isModuleType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignatureWithSender\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onInstall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onUninstall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-7579 Validation module (type 1). A module that implements logic to validate user operations and signatures.\",\"kind\":\"dev\",\"methods\":{\"isModuleType(uint256)\":{\"details\":\"Returns boolean value if module is a certain type\",\"params\":{\"moduleTypeId\":\"the module type ID according the ERC-7579 spec MUST return true if the module is of the given type and false otherwise\"}},\"isValidSignatureWithSender(address,bytes32,bytes)\":{\"details\":\"Validates a signature using ERC-1271\",\"params\":{\"hash\":\"the hash of the ERC-1271 request\",\"sender\":\"the address that sent the ERC-1271 request to the smart account\",\"signature\":\"the signature of the ERC-1271 request MUST return the ERC-1271 `MAGIC_VALUE` if the signature is valid MUST NOT modify state\"}},\"onInstall(bytes)\":{\"details\":\"This function is called by the smart account during installation of the module\",\"params\":{\"data\":\"arbitrary data that may be required on the module during `onInstall` initialization MUST revert on error (e.g. if module is already enabled)\"}},\"onUninstall(bytes)\":{\"details\":\"This function is called by the smart account during uninstallation of the module\",\"params\":{\"data\":\"arbitrary data that may be required on the module during `onUninstall` de-initialization MUST revert on error\"}},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)\":{\"details\":\"Validates a UserOperation\",\"params\":{\"userOp\":\"the ERC-4337 PackedUserOperation\",\"userOpHash\":\"the hash of the ERC-4337 PackedUserOperation MUST validate that the signature is a valid signature of the userOpHash SHOULD return ERC-4337's SIG_VALIDATION_FAILED (and not revert) on signature mismatch See {IAccount-validateUserOp} for additional information on the return value\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":\"IERC7579Validator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":{\"keccak256\":\"0x0b2bccccbc46abbf9816dce8f021273d87955416787e99e13196180852f200d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5f103634337d36451c0b0d9434f97a3f83283783ee5b01d439f43f96edb6737\",\"dweb:/ipfs/QmdD9Nqmmdy1WXDQx64nrrGH7VGzhZwSJq1Y2p8dao6fnu\"]}},\"version\":1}"}},"contracts/CounterModule.sol":{"CounterModule":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ModuleInstalledReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"ModuleUninstalledReceived","type":"event"},{"inputs":[],"name":"getNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"}],"name":"isModuleType","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onInstall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onUninstall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"number","type":"uint256"}],"name":"setNumber","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600e575f5ffd5b506102838061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80633fb5c1cb146100595780636d61fe701461007a5780638a91b0e31461008d578063ecd05961146100a0578063f2c9ecd8146100c9575b5f5ffd5b610078610067366004610189565b335f90815260208190526040902055565b005b6100786100883660046101a0565b6100e6565b61007861009b3660046101a0565b61014a565b6100b46100ae366004610189565b60021490565b60405190151581526020015b60405180910390f35b335f908152602081905260409020546040519081526020016100c0565b5f6100f382840184610189565b905061010a81335f90815260208190526040902055565b7f1bb2cf2ce981360109c48db05416ea380edeec6b23f5266b1cc3be41e24a3e9433848460405161013d9392919061020e565b60405180910390a1505050565b7fc8913c4ab45f9cf985973c570fc361bb110b13a7312ed2210427746284f65f4c33838360405161017d9392919061020e565b60405180910390a15050565b5f60208284031215610199575f5ffd5b5035919050565b5f5f602083850312156101b1575f5ffd5b823567ffffffffffffffff8111156101c7575f5ffd5b8301601f810185136101d7575f5ffd5b803567ffffffffffffffff8111156101ed575f5ffd5b8560208284010111156101fe575f5ffd5b6020919091019590945092505050565b6001600160a01b03841681526040602082018190528101829052818360608301375f818301606090810191909152601f909201601f191601019291505056fea2646970667358221220387d95512707756e9343e344fc761847a5412ac5e760cc9ee027fe9ef7d89d1164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x283 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FB5C1CB EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x6D61FE70 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x8A91B0E3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xECD05961 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2C9ECD8 EQ PUSH2 0xC9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x78 PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x189 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x88 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x78 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST PUSH2 0xB4 PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x189 JUMP JUMPDEST PUSH1 0x2 EQ SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST PUSH0 PUSH2 0xF3 DUP3 DUP5 ADD DUP5 PUSH2 0x189 JUMP JUMPDEST SWAP1 POP PUSH2 0x10A DUP2 CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH32 0x1BB2CF2CE981360109C48DB05416EA380EDEEC6B23F5266B1CC3BE41E24A3E94 CALLER DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH32 0xC8913C4AB45F9CF985973C570FC361BB110B13A7312ED2210427746284F65F4C CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x1FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE PUSH30 0x95512707756E9343E344FC761847A5412AC5E760CC9EE027FE9EF7D89D11 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"167:1046:2:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getNumber_508":{"entryPoint":null,"id":508,"parameterSlots":0,"returnSlots":1},"@isModuleType_484":{"entryPoint":null,"id":484,"parameterSlots":1,"returnSlots":1},"@onInstall_460":{"entryPoint":230,"id":460,"parameterSlots":2,"returnSlots":0},"@onUninstall_472":{"entryPoint":330,"id":472,"parameterSlots":2,"returnSlots":0},"@setNumber_497":{"entryPoint":null,"id":497,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":416,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":393,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":526,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:1651:3","nodeType":"YulBlock","src":"0:1651:3","statements":[{"nativeSrc":"6:3:3","nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nativeSrc":"84:110:3","nodeType":"YulBlock","src":"84:110:3","statements":[{"body":{"nativeSrc":"130:16:3","nodeType":"YulBlock","src":"130:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"139:1:3","nodeType":"YulLiteral","src":"139:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"142:1:3","nodeType":"YulLiteral","src":"142:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"132:6:3","nodeType":"YulIdentifier","src":"132:6:3"},"nativeSrc":"132:12:3","nodeType":"YulFunctionCall","src":"132:12:3"},"nativeSrc":"132:12:3","nodeType":"YulExpressionStatement","src":"132:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"105:7:3","nodeType":"YulIdentifier","src":"105:7:3"},{"name":"headStart","nativeSrc":"114:9:3","nodeType":"YulIdentifier","src":"114:9:3"}],"functionName":{"name":"sub","nativeSrc":"101:3:3","nodeType":"YulIdentifier","src":"101:3:3"},"nativeSrc":"101:23:3","nodeType":"YulFunctionCall","src":"101:23:3"},{"kind":"number","nativeSrc":"126:2:3","nodeType":"YulLiteral","src":"126:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"97:3:3","nodeType":"YulIdentifier","src":"97:3:3"},"nativeSrc":"97:32:3","nodeType":"YulFunctionCall","src":"97:32:3"},"nativeSrc":"94:52:3","nodeType":"YulIf","src":"94:52:3"},{"nativeSrc":"155:33:3","nodeType":"YulAssignment","src":"155:33:3","value":{"arguments":[{"name":"headStart","nativeSrc":"178:9:3","nodeType":"YulIdentifier","src":"178:9:3"}],"functionName":{"name":"calldataload","nativeSrc":"165:12:3","nodeType":"YulIdentifier","src":"165:12:3"},"nativeSrc":"165:23:3","nodeType":"YulFunctionCall","src":"165:23:3"},"variableNames":[{"name":"value0","nativeSrc":"155:6:3","nodeType":"YulIdentifier","src":"155:6:3"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"14:180:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"50:9:3","nodeType":"YulTypedName","src":"50:9:3","type":""},{"name":"dataEnd","nativeSrc":"61:7:3","nodeType":"YulTypedName","src":"61:7:3","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"73:6:3","nodeType":"YulTypedName","src":"73:6:3","type":""}],"src":"14:180:3"},{"body":{"nativeSrc":"288:497:3","nodeType":"YulBlock","src":"288:497:3","statements":[{"body":{"nativeSrc":"334:16:3","nodeType":"YulBlock","src":"334:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"343:1:3","nodeType":"YulLiteral","src":"343:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"346:1:3","nodeType":"YulLiteral","src":"346:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"336:6:3","nodeType":"YulIdentifier","src":"336:6:3"},"nativeSrc":"336:12:3","nodeType":"YulFunctionCall","src":"336:12:3"},"nativeSrc":"336:12:3","nodeType":"YulExpressionStatement","src":"336:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"309:7:3","nodeType":"YulIdentifier","src":"309:7:3"},{"name":"headStart","nativeSrc":"318:9:3","nodeType":"YulIdentifier","src":"318:9:3"}],"functionName":{"name":"sub","nativeSrc":"305:3:3","nodeType":"YulIdentifier","src":"305:3:3"},"nativeSrc":"305:23:3","nodeType":"YulFunctionCall","src":"305:23:3"},{"kind":"number","nativeSrc":"330:2:3","nodeType":"YulLiteral","src":"330:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"301:3:3","nodeType":"YulIdentifier","src":"301:3:3"},"nativeSrc":"301:32:3","nodeType":"YulFunctionCall","src":"301:32:3"},"nativeSrc":"298:52:3","nodeType":"YulIf","src":"298:52:3"},{"nativeSrc":"359:37:3","nodeType":"YulVariableDeclaration","src":"359:37:3","value":{"arguments":[{"name":"headStart","nativeSrc":"386:9:3","nodeType":"YulIdentifier","src":"386:9:3"}],"functionName":{"name":"calldataload","nativeSrc":"373:12:3","nodeType":"YulIdentifier","src":"373:12:3"},"nativeSrc":"373:23:3","nodeType":"YulFunctionCall","src":"373:23:3"},"variables":[{"name":"offset","nativeSrc":"363:6:3","nodeType":"YulTypedName","src":"363:6:3","type":""}]},{"body":{"nativeSrc":"439:16:3","nodeType":"YulBlock","src":"439:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"448:1:3","nodeType":"YulLiteral","src":"448:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"451:1:3","nodeType":"YulLiteral","src":"451:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"441:6:3","nodeType":"YulIdentifier","src":"441:6:3"},"nativeSrc":"441:12:3","nodeType":"YulFunctionCall","src":"441:12:3"},"nativeSrc":"441:12:3","nodeType":"YulExpressionStatement","src":"441:12:3"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"411:6:3","nodeType":"YulIdentifier","src":"411:6:3"},{"kind":"number","nativeSrc":"419:18:3","nodeType":"YulLiteral","src":"419:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"408:2:3","nodeType":"YulIdentifier","src":"408:2:3"},"nativeSrc":"408:30:3","nodeType":"YulFunctionCall","src":"408:30:3"},"nativeSrc":"405:50:3","nodeType":"YulIf","src":"405:50:3"},{"nativeSrc":"464:32:3","nodeType":"YulVariableDeclaration","src":"464:32:3","value":{"arguments":[{"name":"headStart","nativeSrc":"478:9:3","nodeType":"YulIdentifier","src":"478:9:3"},{"name":"offset","nativeSrc":"489:6:3","nodeType":"YulIdentifier","src":"489:6:3"}],"functionName":{"name":"add","nativeSrc":"474:3:3","nodeType":"YulIdentifier","src":"474:3:3"},"nativeSrc":"474:22:3","nodeType":"YulFunctionCall","src":"474:22:3"},"variables":[{"name":"_1","nativeSrc":"468:2:3","nodeType":"YulTypedName","src":"468:2:3","type":""}]},{"body":{"nativeSrc":"544:16:3","nodeType":"YulBlock","src":"544:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"553:1:3","nodeType":"YulLiteral","src":"553:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"556:1:3","nodeType":"YulLiteral","src":"556:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"546:6:3","nodeType":"YulIdentifier","src":"546:6:3"},"nativeSrc":"546:12:3","nodeType":"YulFunctionCall","src":"546:12:3"},"nativeSrc":"546:12:3","nodeType":"YulExpressionStatement","src":"546:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"523:2:3","nodeType":"YulIdentifier","src":"523:2:3"},{"kind":"number","nativeSrc":"527:4:3","nodeType":"YulLiteral","src":"527:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"519:3:3","nodeType":"YulIdentifier","src":"519:3:3"},"nativeSrc":"519:13:3","nodeType":"YulFunctionCall","src":"519:13:3"},{"name":"dataEnd","nativeSrc":"534:7:3","nodeType":"YulIdentifier","src":"534:7:3"}],"functionName":{"name":"slt","nativeSrc":"515:3:3","nodeType":"YulIdentifier","src":"515:3:3"},"nativeSrc":"515:27:3","nodeType":"YulFunctionCall","src":"515:27:3"}],"functionName":{"name":"iszero","nativeSrc":"508:6:3","nodeType":"YulIdentifier","src":"508:6:3"},"nativeSrc":"508:35:3","nodeType":"YulFunctionCall","src":"508:35:3"},"nativeSrc":"505:55:3","nodeType":"YulIf","src":"505:55:3"},{"nativeSrc":"569:30:3","nodeType":"YulVariableDeclaration","src":"569:30:3","value":{"arguments":[{"name":"_1","nativeSrc":"596:2:3","nodeType":"YulIdentifier","src":"596:2:3"}],"functionName":{"name":"calldataload","nativeSrc":"583:12:3","nodeType":"YulIdentifier","src":"583:12:3"},"nativeSrc":"583:16:3","nodeType":"YulFunctionCall","src":"583:16:3"},"variables":[{"name":"length","nativeSrc":"573:6:3","nodeType":"YulTypedName","src":"573:6:3","type":""}]},{"body":{"nativeSrc":"642:16:3","nodeType":"YulBlock","src":"642:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"651:1:3","nodeType":"YulLiteral","src":"651:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"654:1:3","nodeType":"YulLiteral","src":"654:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"644:6:3","nodeType":"YulIdentifier","src":"644:6:3"},"nativeSrc":"644:12:3","nodeType":"YulFunctionCall","src":"644:12:3"},"nativeSrc":"644:12:3","nodeType":"YulExpressionStatement","src":"644:12:3"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"614:6:3","nodeType":"YulIdentifier","src":"614:6:3"},{"kind":"number","nativeSrc":"622:18:3","nodeType":"YulLiteral","src":"622:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"611:2:3","nodeType":"YulIdentifier","src":"611:2:3"},"nativeSrc":"611:30:3","nodeType":"YulFunctionCall","src":"611:30:3"},"nativeSrc":"608:50:3","nodeType":"YulIf","src":"608:50:3"},{"body":{"nativeSrc":"708:16:3","nodeType":"YulBlock","src":"708:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"717:1:3","nodeType":"YulLiteral","src":"717:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"720:1:3","nodeType":"YulLiteral","src":"720:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"710:6:3","nodeType":"YulIdentifier","src":"710:6:3"},"nativeSrc":"710:12:3","nodeType":"YulFunctionCall","src":"710:12:3"},"nativeSrc":"710:12:3","nodeType":"YulExpressionStatement","src":"710:12:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"681:2:3","nodeType":"YulIdentifier","src":"681:2:3"},{"name":"length","nativeSrc":"685:6:3","nodeType":"YulIdentifier","src":"685:6:3"}],"functionName":{"name":"add","nativeSrc":"677:3:3","nodeType":"YulIdentifier","src":"677:3:3"},"nativeSrc":"677:15:3","nodeType":"YulFunctionCall","src":"677:15:3"},{"kind":"number","nativeSrc":"694:2:3","nodeType":"YulLiteral","src":"694:2:3","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"673:3:3","nodeType":"YulIdentifier","src":"673:3:3"},"nativeSrc":"673:24:3","nodeType":"YulFunctionCall","src":"673:24:3"},{"name":"dataEnd","nativeSrc":"699:7:3","nodeType":"YulIdentifier","src":"699:7:3"}],"functionName":{"name":"gt","nativeSrc":"670:2:3","nodeType":"YulIdentifier","src":"670:2:3"},"nativeSrc":"670:37:3","nodeType":"YulFunctionCall","src":"670:37:3"},"nativeSrc":"667:57:3","nodeType":"YulIf","src":"667:57:3"},{"nativeSrc":"733:21:3","nodeType":"YulAssignment","src":"733:21:3","value":{"arguments":[{"name":"_1","nativeSrc":"747:2:3","nodeType":"YulIdentifier","src":"747:2:3"},{"kind":"number","nativeSrc":"751:2:3","nodeType":"YulLiteral","src":"751:2:3","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"743:3:3","nodeType":"YulIdentifier","src":"743:3:3"},"nativeSrc":"743:11:3","nodeType":"YulFunctionCall","src":"743:11:3"},"variableNames":[{"name":"value0","nativeSrc":"733:6:3","nodeType":"YulIdentifier","src":"733:6:3"}]},{"nativeSrc":"763:16:3","nodeType":"YulAssignment","src":"763:16:3","value":{"name":"length","nativeSrc":"773:6:3","nodeType":"YulIdentifier","src":"773:6:3"},"variableNames":[{"name":"value1","nativeSrc":"763:6:3","nodeType":"YulIdentifier","src":"763:6:3"}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nativeSrc":"199:586:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"246:9:3","nodeType":"YulTypedName","src":"246:9:3","type":""},{"name":"dataEnd","nativeSrc":"257:7:3","nodeType":"YulTypedName","src":"257:7:3","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"269:6:3","nodeType":"YulTypedName","src":"269:6:3","type":""},{"name":"value1","nativeSrc":"277:6:3","nodeType":"YulTypedName","src":"277:6:3","type":""}],"src":"199:586:3"},{"body":{"nativeSrc":"885:92:3","nodeType":"YulBlock","src":"885:92:3","statements":[{"nativeSrc":"895:26:3","nodeType":"YulAssignment","src":"895:26:3","value":{"arguments":[{"name":"headStart","nativeSrc":"907:9:3","nodeType":"YulIdentifier","src":"907:9:3"},{"kind":"number","nativeSrc":"918:2:3","nodeType":"YulLiteral","src":"918:2:3","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"903:3:3","nodeType":"YulIdentifier","src":"903:3:3"},"nativeSrc":"903:18:3","nodeType":"YulFunctionCall","src":"903:18:3"},"variableNames":[{"name":"tail","nativeSrc":"895:4:3","nodeType":"YulIdentifier","src":"895:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"937:9:3","nodeType":"YulIdentifier","src":"937:9:3"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"962:6:3","nodeType":"YulIdentifier","src":"962:6:3"}],"functionName":{"name":"iszero","nativeSrc":"955:6:3","nodeType":"YulIdentifier","src":"955:6:3"},"nativeSrc":"955:14:3","nodeType":"YulFunctionCall","src":"955:14:3"}],"functionName":{"name":"iszero","nativeSrc":"948:6:3","nodeType":"YulIdentifier","src":"948:6:3"},"nativeSrc":"948:22:3","nodeType":"YulFunctionCall","src":"948:22:3"}],"functionName":{"name":"mstore","nativeSrc":"930:6:3","nodeType":"YulIdentifier","src":"930:6:3"},"nativeSrc":"930:41:3","nodeType":"YulFunctionCall","src":"930:41:3"},"nativeSrc":"930:41:3","nodeType":"YulExpressionStatement","src":"930:41:3"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"790:187:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"854:9:3","nodeType":"YulTypedName","src":"854:9:3","type":""},{"name":"value0","nativeSrc":"865:6:3","nodeType":"YulTypedName","src":"865:6:3","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"876:4:3","nodeType":"YulTypedName","src":"876:4:3","type":""}],"src":"790:187:3"},{"body":{"nativeSrc":"1083:76:3","nodeType":"YulBlock","src":"1083:76:3","statements":[{"nativeSrc":"1093:26:3","nodeType":"YulAssignment","src":"1093:26:3","value":{"arguments":[{"name":"headStart","nativeSrc":"1105:9:3","nodeType":"YulIdentifier","src":"1105:9:3"},{"kind":"number","nativeSrc":"1116:2:3","nodeType":"YulLiteral","src":"1116:2:3","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1101:3:3","nodeType":"YulIdentifier","src":"1101:3:3"},"nativeSrc":"1101:18:3","nodeType":"YulFunctionCall","src":"1101:18:3"},"variableNames":[{"name":"tail","nativeSrc":"1093:4:3","nodeType":"YulIdentifier","src":"1093:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1135:9:3","nodeType":"YulIdentifier","src":"1135:9:3"},{"name":"value0","nativeSrc":"1146:6:3","nodeType":"YulIdentifier","src":"1146:6:3"}],"functionName":{"name":"mstore","nativeSrc":"1128:6:3","nodeType":"YulIdentifier","src":"1128:6:3"},"nativeSrc":"1128:25:3","nodeType":"YulFunctionCall","src":"1128:25:3"},"nativeSrc":"1128:25:3","nodeType":"YulExpressionStatement","src":"1128:25:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"982:177:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1052:9:3","nodeType":"YulTypedName","src":"1052:9:3","type":""},{"name":"value0","nativeSrc":"1063:6:3","nodeType":"YulTypedName","src":"1063:6:3","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1074:4:3","nodeType":"YulTypedName","src":"1074:4:3","type":""}],"src":"982:177:3"},{"body":{"nativeSrc":"1321:328:3","nodeType":"YulBlock","src":"1321:328:3","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1338:9:3","nodeType":"YulIdentifier","src":"1338:9:3"},{"arguments":[{"name":"value0","nativeSrc":"1353:6:3","nodeType":"YulIdentifier","src":"1353:6:3"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1369:3:3","nodeType":"YulLiteral","src":"1369:3:3","type":"","value":"160"},{"kind":"number","nativeSrc":"1374:1:3","nodeType":"YulLiteral","src":"1374:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1365:3:3","nodeType":"YulIdentifier","src":"1365:3:3"},"nativeSrc":"1365:11:3","nodeType":"YulFunctionCall","src":"1365:11:3"},{"kind":"number","nativeSrc":"1378:1:3","nodeType":"YulLiteral","src":"1378:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1361:3:3","nodeType":"YulIdentifier","src":"1361:3:3"},"nativeSrc":"1361:19:3","nodeType":"YulFunctionCall","src":"1361:19:3"}],"functionName":{"name":"and","nativeSrc":"1349:3:3","nodeType":"YulIdentifier","src":"1349:3:3"},"nativeSrc":"1349:32:3","nodeType":"YulFunctionCall","src":"1349:32:3"}],"functionName":{"name":"mstore","nativeSrc":"1331:6:3","nodeType":"YulIdentifier","src":"1331:6:3"},"nativeSrc":"1331:51:3","nodeType":"YulFunctionCall","src":"1331:51:3"},"nativeSrc":"1331:51:3","nodeType":"YulExpressionStatement","src":"1331:51:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1402:9:3","nodeType":"YulIdentifier","src":"1402:9:3"},{"kind":"number","nativeSrc":"1413:2:3","nodeType":"YulLiteral","src":"1413:2:3","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1398:3:3","nodeType":"YulIdentifier","src":"1398:3:3"},"nativeSrc":"1398:18:3","nodeType":"YulFunctionCall","src":"1398:18:3"},{"kind":"number","nativeSrc":"1418:2:3","nodeType":"YulLiteral","src":"1418:2:3","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"1391:6:3","nodeType":"YulIdentifier","src":"1391:6:3"},"nativeSrc":"1391:30:3","nodeType":"YulFunctionCall","src":"1391:30:3"},"nativeSrc":"1391:30:3","nodeType":"YulExpressionStatement","src":"1391:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1441:9:3","nodeType":"YulIdentifier","src":"1441:9:3"},{"kind":"number","nativeSrc":"1452:2:3","nodeType":"YulLiteral","src":"1452:2:3","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1437:3:3","nodeType":"YulIdentifier","src":"1437:3:3"},"nativeSrc":"1437:18:3","nodeType":"YulFunctionCall","src":"1437:18:3"},{"name":"value2","nativeSrc":"1457:6:3","nodeType":"YulIdentifier","src":"1457:6:3"}],"functionName":{"name":"mstore","nativeSrc":"1430:6:3","nodeType":"YulIdentifier","src":"1430:6:3"},"nativeSrc":"1430:34:3","nodeType":"YulFunctionCall","src":"1430:34:3"},"nativeSrc":"1430:34:3","nodeType":"YulExpressionStatement","src":"1430:34:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1490:9:3","nodeType":"YulIdentifier","src":"1490:9:3"},{"kind":"number","nativeSrc":"1501:2:3","nodeType":"YulLiteral","src":"1501:2:3","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1486:3:3","nodeType":"YulIdentifier","src":"1486:3:3"},"nativeSrc":"1486:18:3","nodeType":"YulFunctionCall","src":"1486:18:3"},{"name":"value1","nativeSrc":"1506:6:3","nodeType":"YulIdentifier","src":"1506:6:3"},{"name":"value2","nativeSrc":"1514:6:3","nodeType":"YulIdentifier","src":"1514:6:3"}],"functionName":{"name":"calldatacopy","nativeSrc":"1473:12:3","nodeType":"YulIdentifier","src":"1473:12:3"},"nativeSrc":"1473:48:3","nodeType":"YulFunctionCall","src":"1473:48:3"},"nativeSrc":"1473:48:3","nodeType":"YulExpressionStatement","src":"1473:48:3"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1545:9:3","nodeType":"YulIdentifier","src":"1545:9:3"},{"name":"value2","nativeSrc":"1556:6:3","nodeType":"YulIdentifier","src":"1556:6:3"}],"functionName":{"name":"add","nativeSrc":"1541:3:3","nodeType":"YulIdentifier","src":"1541:3:3"},"nativeSrc":"1541:22:3","nodeType":"YulFunctionCall","src":"1541:22:3"},{"kind":"number","nativeSrc":"1565:2:3","nodeType":"YulLiteral","src":"1565:2:3","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1537:3:3","nodeType":"YulIdentifier","src":"1537:3:3"},"nativeSrc":"1537:31:3","nodeType":"YulFunctionCall","src":"1537:31:3"},{"kind":"number","nativeSrc":"1570:1:3","nodeType":"YulLiteral","src":"1570:1:3","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1530:6:3","nodeType":"YulIdentifier","src":"1530:6:3"},"nativeSrc":"1530:42:3","nodeType":"YulFunctionCall","src":"1530:42:3"},"nativeSrc":"1530:42:3","nodeType":"YulExpressionStatement","src":"1530:42:3"},{"nativeSrc":"1581:62:3","nodeType":"YulAssignment","src":"1581:62:3","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1597:9:3","nodeType":"YulIdentifier","src":"1597:9:3"},{"arguments":[{"arguments":[{"name":"value2","nativeSrc":"1616:6:3","nodeType":"YulIdentifier","src":"1616:6:3"},{"kind":"number","nativeSrc":"1624:2:3","nodeType":"YulLiteral","src":"1624:2:3","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1612:3:3","nodeType":"YulIdentifier","src":"1612:3:3"},"nativeSrc":"1612:15:3","nodeType":"YulFunctionCall","src":"1612:15:3"},{"arguments":[{"kind":"number","nativeSrc":"1633:2:3","nodeType":"YulLiteral","src":"1633:2:3","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1629:3:3","nodeType":"YulIdentifier","src":"1629:3:3"},"nativeSrc":"1629:7:3","nodeType":"YulFunctionCall","src":"1629:7:3"}],"functionName":{"name":"and","nativeSrc":"1608:3:3","nodeType":"YulIdentifier","src":"1608:3:3"},"nativeSrc":"1608:29:3","nodeType":"YulFunctionCall","src":"1608:29:3"}],"functionName":{"name":"add","nativeSrc":"1593:3:3","nodeType":"YulIdentifier","src":"1593:3:3"},"nativeSrc":"1593:45:3","nodeType":"YulFunctionCall","src":"1593:45:3"},{"kind":"number","nativeSrc":"1640:2:3","nodeType":"YulLiteral","src":"1640:2:3","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1589:3:3","nodeType":"YulIdentifier","src":"1589:3:3"},"nativeSrc":"1589:54:3","nodeType":"YulFunctionCall","src":"1589:54:3"},"variableNames":[{"name":"tail","nativeSrc":"1581:4:3","nodeType":"YulIdentifier","src":"1581:4:3"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"1164:485:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1274:9:3","nodeType":"YulTypedName","src":"1274:9:3","type":""},{"name":"value2","nativeSrc":"1285:6:3","nodeType":"YulTypedName","src":"1285:6:3","type":""},{"name":"value1","nativeSrc":"1293:6:3","nodeType":"YulTypedName","src":"1293:6:3","type":""},{"name":"value0","nativeSrc":"1301:6:3","nodeType":"YulTypedName","src":"1301:6:3","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1312:4:3","nodeType":"YulTypedName","src":"1312:4:3","type":""}],"src":"1164:485:3"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), value2)\n        calldatacopy(add(headStart, 96), value1, value2)\n        mstore(add(add(headStart, value2), 96), 0)\n        tail := add(add(headStart, and(add(value2, 31), not(31))), 96)\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80633fb5c1cb146100595780636d61fe701461007a5780638a91b0e31461008d578063ecd05961146100a0578063f2c9ecd8146100c9575b5f5ffd5b610078610067366004610189565b335f90815260208190526040902055565b005b6100786100883660046101a0565b6100e6565b61007861009b3660046101a0565b61014a565b6100b46100ae366004610189565b60021490565b60405190151581526020015b60405180910390f35b335f908152602081905260409020546040519081526020016100c0565b5f6100f382840184610189565b905061010a81335f90815260208190526040902055565b7f1bb2cf2ce981360109c48db05416ea380edeec6b23f5266b1cc3be41e24a3e9433848460405161013d9392919061020e565b60405180910390a1505050565b7fc8913c4ab45f9cf985973c570fc361bb110b13a7312ed2210427746284f65f4c33838360405161017d9392919061020e565b60405180910390a15050565b5f60208284031215610199575f5ffd5b5035919050565b5f5f602083850312156101b1575f5ffd5b823567ffffffffffffffff8111156101c7575f5ffd5b8301601f810185136101d7575f5ffd5b803567ffffffffffffffff8111156101ed575f5ffd5b8560208284010111156101fe575f5ffd5b6020919091019590945092505050565b6001600160a01b03841681526040602082018190528101829052818360608301375f818301606090810191909152601f909201601f191601019291505056fea2646970667358221220387d95512707756e9343e344fc761847a5412ac5e760cc9ee027fe9ef7d89d1164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FB5C1CB EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x6D61FE70 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x8A91B0E3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xECD05961 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2C9ECD8 EQ PUSH2 0xC9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x78 PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x189 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x88 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x78 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST PUSH2 0xB4 PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x189 JUMP JUMPDEST PUSH1 0x2 EQ SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST PUSH0 PUSH2 0xF3 DUP3 DUP5 ADD DUP5 PUSH2 0x189 JUMP JUMPDEST SWAP1 POP PUSH2 0x10A DUP2 CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH32 0x1BB2CF2CE981360109C48DB05416EA380EDEEC6B23F5266B1CC3BE41E24A3E94 CALLER DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH32 0xC8913C4AB45F9CF985973C570FC361BB110B13A7312ED2210427746284F65F4C CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1D7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x1FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE PUSH30 0x95512707756E9343E344FC761847A5412AC5E760CC9EE027FE9EF7D89D11 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"167:1046:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:88;;;;;;:::i;:::-;1083:10;1074:8;:20;;;;;;;;;;:29;1022:88;;;479:236;;;;;;:::i;:::-;;:::i;721:122::-;;;;;;:::i;:::-;;:::i;849:126::-;;;;;;:::i;:::-;362:1:1;939:29:2;;849:126;;;;955:14:3;;948:22;930:41;;918:2;903:18;849:126:2;;;;;;;;1116:95;1193:10;1158:7;1184:20;;;;;;;;;;;1116:95;;1128:25:3;;;1116:2;1101:18;1116:95:2;982:177:3;479:236:2;580:14;597:27;;;;608:4;597:27;:::i;:::-;580:44;;634:17;644:6;1083:10;1074:8;:20;;;;;;;;;;:29;1022:88;634:17;667:41;691:10;703:4;;667:41;;;;;;;;:::i;:::-;;;;;;;;534:181;479:236;;:::o;721:122::-;793:43;819:10;831:4;;793:43;;;;;;;;:::i;:::-;;;;;;;;721:122;;:::o;14:180:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:3;;14:180;-1:-1:-1;14:180:3:o;199:586::-;269:6;277;330:2;318:9;309:7;305:23;301:32;298:52;;;346:1;343;336:12;298:52;386:9;373:23;419:18;411:6;408:30;405:50;;;451:1;448;441:12;405:50;474:22;;527:4;519:13;;515:27;-1:-1:-1;505:55:3;;556:1;553;546:12;505:55;596:2;583:16;622:18;614:6;611:30;608:50;;;654:1;651;644:12;608:50;699:7;694:2;685:6;681:2;677:15;673:24;670:37;667:57;;;720:1;717;710:12;667:57;751:2;743:11;;;;;773:6;;-1:-1:-1;199:586:3;-1:-1:-1;;;199:586:3:o;1164:485::-;-1:-1:-1;;;;;1349:32:3;;1331:51;;1418:2;1413;1398:18;;1391:30;;;1437:18;;1430:34;;;1457:6;1506;1501:2;1486:18;;1473:48;1570:1;1541:22;;;1565:2;1537:31;;;1530:42;;;;1633:2;1612:15;;;-1:-1:-1;;1608:29:3;1593:45;1589:54;;1164:485;-1:-1:-1;;1164:485:3:o"},"methodIdentifiers":{"getNumber()":"f2c9ecd8","isModuleType(uint256)":"ecd05961","onInstall(bytes)":"6d61fe70","onUninstall(bytes)":"8a91b0e3","setNumber(uint256)":"3fb5c1cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ModuleInstalledReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ModuleUninstalledReceived\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"}],\"name\":\"isModuleType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onInstall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onUninstall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"setNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isModuleType(uint256)\":{\"details\":\"Returns boolean value if module is a certain type\",\"params\":{\"moduleTypeId\":\"the module type ID according the ERC-7579 spec MUST return true if the module is of the given type and false otherwise\"}},\"onInstall(bytes)\":{\"details\":\"This function is called by the smart account during installation of the module\",\"params\":{\"data\":\"arbitrary data that may be required on the module during `onInstall` initialization MUST revert on error (e.g. if module is already enabled)\"}},\"onUninstall(bytes)\":{\"details\":\"This function is called by the smart account during uninstallation of the module\",\"params\":{\"data\":\"arbitrary data that may be required on the module during `onUninstall` de-initialization MUST revert on error\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CounterModule.sol\":\"CounterModule\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC7579.sol\":{\"keccak256\":\"0x0b2bccccbc46abbf9816dce8f021273d87955416787e99e13196180852f200d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5f103634337d36451c0b0d9434f97a3f83283783ee5b01d439f43f96edb6737\",\"dweb:/ipfs/QmdD9Nqmmdy1WXDQx64nrrGH7VGzhZwSJq1Y2p8dao6fnu\"]},\"contracts/CounterModule.sol\":{\"keccak256\":\"0xeaa6e05a3da872f892df4cc4f4a3aa715aa90cbd1d4867affb0861dc226e311f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c004ab3ba70945d6a0b8248302f3e920dc183b99530383c7c27b1e07f03c1587\",\"dweb:/ipfs/QmZWC9hktJ9Hx9QHa6CUB2ZEGsRvCWwrgoANnRWCRXiKh5\"]}},\"version\":1}"}}}}}