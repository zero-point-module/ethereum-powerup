/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CounterModule,
  CounterModuleInterface,
} from "../../../contracts/samples/CounterModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ModuleInstalledReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ModuleUninstalledReceived",
    type: "event",
  },
  {
    inputs: [],
    name: "getNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "moduleTypeId",
        type: "uint256",
      },
    ],
    name: "isModuleType",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onInstall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onUninstall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "setNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506102938061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633fb5c1cb1461005c5780636d61fe701461007e5780638a91b0e314610091578063ecd05961146100a4578063f2c9ecd8146100cd575b600080fd5b61007c61006a366004610190565b33600090815260208190526040902055565b005b61007c61008c3660046101a9565b6100eb565b61007c61009f3660046101a9565b610151565b6100b86100b2366004610190565b60021490565b60405190151581526020015b60405180910390f35b336000908152602081905260409020546040519081526020016100c4565b60006100f982840184610190565b90506101118133600090815260208190526040902055565b7f1bb2cf2ce981360109c48db05416ea380edeec6b23f5266b1cc3be41e24a3e943384846040516101449392919061021d565b60405180910390a1505050565b7fc8913c4ab45f9cf985973c570fc361bb110b13a7312ed2210427746284f65f4c3383836040516101849392919061021d565b60405180910390a15050565b6000602082840312156101a257600080fd5b5035919050565b600080602083850312156101bc57600080fd5b823567ffffffffffffffff8111156101d357600080fd5b8301601f810185136101e457600080fd5b803567ffffffffffffffff8111156101fb57600080fd5b85602082840101111561020d57600080fd5b6020919091019590945092505050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f191601019291505056fea264697066735822122057c80dfc604b11c7b361bbbb6599e09b323206bc7e6043bd7025ec274a82fc3364736f6c634300081c0033";

type CounterModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CounterModule__factory extends ContractFactory {
  constructor(...args: CounterModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CounterModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CounterModule__factory {
    return super.connect(runner) as CounterModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterModuleInterface {
    return new Interface(_abi) as CounterModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CounterModule {
    return new Contract(address, _abi, runner) as unknown as CounterModule;
  }
}
